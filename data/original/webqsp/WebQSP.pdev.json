{
  "Questions": [
    {
      "QuestionId": "WebQTrn-2618",
      "RawQuestion": "where did woodrow wilson go to school?",
      "ProcessedQuestion": "where did woodrow wilson go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2618.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083q7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083q7 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
          "PotentialTopicEntityMention": "woodrow wilson",
          "TopicEntityName": "Woodrow Wilson",
          "TopicEntityMid": "m.083q7",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pdhz",
              "EntityName": "Davidson College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qgd9",
              "EntityName": "University of Virginia School of Law"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zl0",
              "EntityName": "Princeton University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09kvv",
              "EntityName": "Johns Hopkins University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-528",
      "RawQuestion": "what are the names of michael jackson children?",
      "ProcessedQuestion": "what are the names of michael jackson children",
      "Parses": [
        {
          "ParseId": "WebQTrn-528.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:people.person.children ?x .\n}\n",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rm4",
              "EntityName": "Paris-Michael Katherine Jackson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rmb",
              "EntityName": "Michael Joseph Jackson, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qbyj",
              "EntityName": "Prince Michael Jackson II"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2597",
      "RawQuestion": "what time zone am i in missouri?",
      "ProcessedQuestion": "what time zone am i in missouri",
      "Parses": [
        {
          "ParseId": "WebQTrn-2597.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ych)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ych ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "missouri",
          "TopicEntityName": "Missouri",
          "TopicEntityMid": "m.04ych",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-472",
      "RawQuestion": "what are some famous tourist attractions in germany?",
      "ProcessedQuestion": "what are some famous tourist attractions in germany",
      "Parses": [
        {
          "ParseId": "WebQTrn-472.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
          "PotentialTopicEntityMention": "germany",
          "TopicEntityName": "Germany",
          "TopicEntityMid": "m.0345h",
          "InferentialChain": [
            "travel.travel_destination.tourist_attractions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012vvtp_",
              "EntityName": "Travefy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mw0",
              "EntityName": "Oktoberfest"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066tl8",
              "EntityName": "Tropical Islands Resort"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0djmy_",
              "EntityName": "Topography of Terror"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h1f0zf",
              "EntityName": "Bochum Total"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2965",
      "RawQuestion": "what is the main language spoken in switzerland?",
      "ProcessedQuestion": "what is the main language spoken in switzerland",
      "Parses": [
        {
          "ParseId": "WebQTrn-2965.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "switzerland",
          "TopicEntityName": "Switzerland",
          "TopicEntityMid": "m.06mzp",
          "InferentialChain": [
            "location.country.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bjrlw",
              "EntityName": "Italian Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04306rv",
              "EntityName": "German Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064_8sq",
              "EntityName": "French"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ctk",
              "EntityName": "Romansh language"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2965.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "switzerland",
          "TopicEntityName": "Switzerland",
          "TopicEntityMid": "m.06mzp",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bjrlw",
              "EntityName": "Italian Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04306rv",
              "EntityName": "German Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064_8sq",
              "EntityName": "French"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ctk",
              "EntityName": "Romansh language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2255",
      "RawQuestion": "who invented morse code?",
      "ProcessedQuestion": "who invented morse code",
      "Parses": [
        {
          "ParseId": "WebQTrn-2255.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04sb4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04sb4 ns:law.invention.inventor ?x .\n}\n",
          "PotentialTopicEntityMention": "morse",
          "TopicEntityName": "Morse code",
          "TopicEntityMid": "m.04sb4",
          "InferentialChain": [
            "law.invention.inventor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q6n",
              "EntityName": "Samuel Morse"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1789",
      "RawQuestion": "who is henry david thoreau?",
      "ProcessedQuestion": "who is henry david thoreau",
      "Parses": [
        {
          "ParseId": "WebQTrn-1789.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwx3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwx3 ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "henry david thoreau",
          "TopicEntityName": "Henry David Thoreau",
          "TopicEntityMid": "m.0bwx3",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2178",
      "RawQuestion": "what type of government is the us government?",
      "ProcessedQuestion": "what type of government is the us government",
      "Parses": [
        {
          "ParseId": "WebQTrn-2178.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
          "PotentialTopicEntityMention": "the us",
          "TopicEntityName": "United States of America",
          "TopicEntityMid": "m.09c7w0",
          "InferentialChain": [
            "location.country.form_of_government"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d9r3",
              "EntityName": "Presidential system"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c9rw5",
              "EntityName": "Constitutional republic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j729",
              "EntityName": "Federal republic"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3773",
      "RawQuestion": "where did sir donald bradman live?",
      "ProcessedQuestion": "where did sir donald bradman live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3773.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lylw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lylw ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "sir donald bradman",
          "TopicEntityName": "Don Bradman",
          "TopicEntityMid": "m.0lylw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_356",
              "EntityName": "Cootamundra"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1055",
      "RawQuestion": "what team does sergio aguero play for?",
      "ProcessedQuestion": "what team does sergio aguero play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1055.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099vgz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099vgz ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "sergio aguero",
          "TopicEntityName": "Sergio Ag\u00fcero",
          "TopicEntityMid": "m.099vgz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01634x",
              "EntityName": "Manchester City F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-862",
      "RawQuestion": "what movies does leo howard play in?",
      "ProcessedQuestion": "what movies does leo howard play in",
      "Parses": [
        {
          "ParseId": "WebQTrn-862.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sqlp_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sqlp_ ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "leo howard",
          "TopicEntityName": "Leo Howard",
          "TopicEntityMid": "m.05sqlp_",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qcfvw",
              "EntityName": "G.I. Joe: The Rise of Cobra"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qpqj6",
              "EntityName": "Shorts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07k983r",
              "EntityName": "Logan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0807n3z",
              "EntityName": "Children of the Corn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bhc5kw",
              "EntityName": "Conan the Barbarian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0crrk72",
              "EntityName": "Aussie & Ted's Great Adventure"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1850",
      "RawQuestion": "when did freddy krueger die?",
      "ProcessedQuestion": "when did freddy krueger die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1850.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wmgs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wmgs ns:base.fictionaluniverse.deceased_fictional_character.date_of_death ?y .\n?y ns:fictional_universe.fictional_date_time.date_time ?x .\n}\n",
          "PotentialTopicEntityMention": "freddy krueger",
          "TopicEntityName": "Freddy Krueger",
          "TopicEntityMid": "m.01wmgs",
          "InferentialChain": [
            "base.fictionaluniverse.deceased_fictional_character.date_of_death",
            "fictional_universe.fictional_date_time.date_time"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1968",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1566",
      "RawQuestion": "where did kurt cobain die?",
      "ProcessedQuestion": "where did kurt cobain die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1566.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0484q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0484q ns:people.deceased_person.place_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "kurt cobain",
          "TopicEntityName": "Kurt Cobain",
          "TopicEntityMid": "m.0484q",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9jr",
              "EntityName": "Seattle"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3071",
      "RawQuestion": "what guitar did clapton play?",
      "ProcessedQuestion": "what guitar did clapton play",
      "Parses": [
        {
          "ParseId": "WebQTrn-3071.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qwg ns:music.guitarist.guitars_played ?x .\n}\n",
          "PotentialTopicEntityMention": "clapton",
          "TopicEntityName": "Eric Clapton",
          "TopicEntityMid": "m.02qwg",
          "InferentialChain": [
            "music.guitarist.guitars_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jyd4",
              "EntityName": "Gibson SG"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02m873",
              "EntityName": "Fender Stratocaster"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1160",
      "RawQuestion": "when did george w bush take office?",
      "ProcessedQuestion": "when did george w bush take office",
      "Parses": [
        {
          "ParseId": "WebQTrn-1160.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b6zr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b6zr ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.from ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.060d2 .\n}\n",
          "PotentialTopicEntityMention": "george w bush",
          "TopicEntityName": "George W. Bush",
          "TopicEntityMid": "m.09b6zr",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2001-01-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2783",
      "RawQuestion": "who is country singer jewel married to?",
      "ProcessedQuestion": "who is country singer jewel married to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2783.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0152cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0152cw ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
          "PotentialTopicEntityMention": "jewel",
          "TopicEntityName": "Jewel",
          "TopicEntityMid": "m.0152cw",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.spouse"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ddjs8",
              "EntityName": "Ty Murray"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-847",
      "RawQuestion": "what are the 3 official languages of spain?",
      "ProcessedQuestion": "what are the 3 official languages of spain",
      "Parses": [
        {
          "ParseId": "WebQTrn-847.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "spain",
          "TopicEntityName": "Spain",
          "TopicEntityMid": "m.06mkj",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06nm1",
              "EntityName": "Spanish Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2897",
      "RawQuestion": "who owns wikimedia foundation?",
      "ProcessedQuestion": "who owns wikimedia foundation",
      "Parses": [
        {
          "ParseId": "WebQTrn-2897.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01c7j1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01c7j1 ns:organization.organization.board_members ?y .\n?y ns:organization.organization_board_membership.member ?x .\n}\n",
          "PotentialTopicEntityMention": "wikimedia foundation",
          "TopicEntityName": "Wikimedia Foundation",
          "TopicEntityMid": "m.01c7j1",
          "InferentialChain": [
            "organization.organization.board_members",
            "organization.organization_board_membership.member"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p3t4c",
              "EntityName": "Jan-Bart de Vreede"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p3t57",
              "EntityName": "Frieda Brioschi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dxr15",
              "EntityName": "Stuart West"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dxr5g",
              "EntityName": "Domas Mituzas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f05ys",
              "EntityName": "Michael Snow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qt1k",
              "EntityName": "Florence Devouard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09w8jl",
              "EntityName": "Jimmy Wales"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hznqfp",
              "EntityName": "Ting Chen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l8pk60",
              "EntityName": "Kat Walsh"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1639",
      "RawQuestion": "what was the name of the book hitler wrote while in prison?",
      "ProcessedQuestion": "what was the name of the book hitler wrote while in prison",
      "Parses": [
        {
          "ParseId": "WebQTrn-1639.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. No answer though because the written date of the book is not in FB.. Original comment: F need intersection with prison time (which is in KB)"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.07_m9_ ns:book.book_subject.works ?x .\n  ?x ns:book.written_work.date_written ?d .\n\n  ns:m.07_m9_ ns:base.prison.prisoner.imprisoned ?y .\n  ?y          ns:base.prison.imprisonment.from ?from ;\n              ns:base.prison.imprisonment.to ?to .\n\n  FILTER (?d > ?from)\n  FILTER (?d > ?to)\n}",
          "PotentialTopicEntityMention": "hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "book.author.works_written"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-267",
      "RawQuestion": "what other countries does canada trade with?",
      "ProcessedQuestion": "what other countries does canada trade with",
      "Parses": [
        {
          "ParseId": "WebQTrn-267.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F union"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  {\n    ns:m.0d060g ns:location.statistical_region.places_exported_to ?y . # Canada\n    ?y ns:location.imports_and_exports.exported_to ?x .\n  }\n  UNION\n  {\n    ns:m.0d060g ns:location.statistical_region.places_exported_from ?y . # Canada\n    ?y ns:location.imports_and_exports.exported_from ?x .\n  }\n}",
          "PotentialTopicEntityMention": "canada",
          "TopicEntityName": "Canada",
          "TopicEntityMid": "m.0d060g",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_3d",
              "EntityName": "Japan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2126",
      "RawQuestion": "what planet was luke skywalker raised on?",
      "ProcessedQuestion": "what planet was luke skywalker raised on",
      "Parses": [
        {
          "ParseId": "WebQTrn-2126.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.places_lived ?x .\n}\n",
          "PotentialTopicEntityMention": "luke skywalker",
          "TopicEntityName": "Luke Skywalker",
          "TopicEntityMid": "m.0f1bg",
          "InferentialChain": [
            "fictional_universe.fictional_character.places_lived"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kcq0",
              "EntityName": "Tatooine"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2600",
      "RawQuestion": "what drugs were in whitney houston when she died?",
      "ProcessedQuestion": "what drugs were in whitney houston when she died",
      "Parses": [
        {
          "ParseId": "WebQTrn-2600.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086qd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086qd ns:people.deceased_person.cause_of_death ?x .\n?x ns:people.cause_of_death.parent_cause_of_death ns:m.01tf_6 .\n}\n",
          "PotentialTopicEntityMention": "whitney houston",
          "TopicEntityName": "Whitney Houston",
          "TopicEntityMid": "m.086qd",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01tf_6",
              "EntityName": "Drug overdose",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.cause_of_death.parent_cause_of_death",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nx6jb",
              "EntityName": "Cocaine overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2847",
      "RawQuestion": "when did sanchez leave usc?",
      "ProcessedQuestion": "when did sanchez leave usc",
      "Parses": [
        {
          "ParseId": "WebQTrn-2847.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctxdn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctxdn ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.to ?x .\n?y ns:sports.sports_team_roster.team ns:m.07k53y .\n}\n",
          "PotentialTopicEntityMention": "sanchez",
          "TopicEntityName": "Mark Sanchez",
          "TopicEntityMid": "m.0ctxdn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.to"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.07k53y",
              "EntityName": "USC Trojans football",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.team",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2008",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2894",
      "RawQuestion": "what are historical places in new york?",
      "ProcessedQuestion": "what are historical places in new york",
      "Parses": [
        {
          "ParseId": "WebQTrn-2894.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? Tourist attraction = historical places"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059rby)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059rby ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
          "PotentialTopicEntityMention": "new york",
          "TopicEntityName": "New York",
          "TopicEntityMid": "m.059rby",
          "InferentialChain": [
            "travel.travel_destination.tourist_attractions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013r41",
              "EntityName": "Coney Island"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0163ff",
              "EntityName": "Rockefeller Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016p8t",
              "EntityName": "Carnegie Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016xm_",
              "EntityName": "Radio City Music Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0179bc",
              "EntityName": "Thousand Islands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kht3",
              "EntityName": "St. Patrick's Cathedral"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lnd3",
              "EntityName": "Flatiron Building"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nbpn",
              "EntityName": "Little Italy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nq4x",
              "EntityName": "Woolworth Building"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pdsd",
              "EntityName": "New York Harbor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pdy0",
              "EntityName": "New York City Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rs7b",
              "EntityName": "The Cloisters"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rxnm",
              "EntityName": "Brooklyn Botanic Garden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rz3c",
              "EntityName": "Grand Central Terminal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01s7jw",
              "EntityName": "Prospect Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zmd",
              "EntityName": "Chrysler Building"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0209mm",
              "EntityName": "New York Botanical Garden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020nlt",
              "EntityName": "Apollo Theater"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021848",
              "EntityName": "Frick Collection"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023r9j",
              "EntityName": "American Museum of Natural History"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026bmdr",
              "EntityName": "Hotel Pennsylvania"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026kp2",
              "EntityName": "Liberty Island"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cj9_",
              "EntityName": "GE Building"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gyzc",
              "EntityName": "Waldorf Astoria New York"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nd_",
              "EntityName": "Empire State Building"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nyg",
              "EntityName": "Ellis Island"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vqw3",
              "EntityName": "Brooklyn Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02zrs",
              "EntityName": "Finger Lakes"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.037lpb",
              "EntityName": "Destiny USA"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03vgd_",
              "EntityName": "Bryant Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0426n1",
              "EntityName": "Glimmerglass State Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jpg0f",
              "EntityName": "Statue of Liberty National Monument"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04k2zh",
              "EntityName": "Queens Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051vm6",
              "EntityName": "Museum of the Moving Image"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05l9fg",
              "EntityName": "Barclays Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06qvwg",
              "EntityName": "Whiteface Mountain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06w5wh8",
              "EntityName": "Metropolitan Opera House"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072p8",
              "EntityName": "Statue of Liberty"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwwf",
              "EntityName": "High Line"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qdr",
              "EntityName": "Times Square"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7b",
              "EntityName": "Metropolitan Museum of Art"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7v",
              "EntityName": "Central Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cjp7w",
              "EntityName": "Webster Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cv4c",
              "EntityName": "Brooklyn Bridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dpk_",
              "EntityName": "Niagara Falls"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ds4dt3",
              "EntityName": "Harmanus Bleecker Library"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fb18",
              "EntityName": "Adirondack Mountains"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gfhhy8",
              "EntityName": "The Big Up Festival"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hhjk",
              "EntityName": "Museum of Modern Art"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hrg52m",
              "EntityName": "Holiday Valley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_66",
              "EntityName": "Madison Square Garden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mzkb",
              "EntityName": "Bronx Zoo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pnb8",
              "EntityName": "Chinatown"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0q9h2",
              "EntityName": "Solomon R. Guggenheim Museum"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-150",
      "RawQuestion": "what was nelson mandela's religion?",
      "ProcessedQuestion": "what was nelson mandela 's religion",
      "Parses": [
        {
          "ParseId": "WebQTrn-150.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g7q ns:people.person.religion ?x .\n}\n",
          "PotentialTopicEntityMention": "nelson mandela",
          "TopicEntityName": "Nelson Mandela",
          "TopicEntityMid": "m.05g7q",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051kv",
              "EntityName": "Methodism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2998",
      "RawQuestion": "who is ellen albertini dow?",
      "ProcessedQuestion": "who is ellen albertini dow",
      "Parses": [
        {
          "ParseId": "WebQTrn-2998.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hzplf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hzplf ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "ellen albertini dow",
          "TopicEntityName": "Ellen Dow",
          "TopicEntityMid": "m.03hzplf",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6n_q",
              "EntityName": "Choreographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1830",
      "RawQuestion": "what ethnicity are people from iran?",
      "ProcessedQuestion": "what ethnicity are people from iran",
      "Parses": [
        {
          "ParseId": "WebQTrn-1830.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nrnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nrnz ns:people.ethnicity.includes_groups ?x .\n}\n",
          "PotentialTopicEntityMention": "people from iran",
          "TopicEntityName": "Iranian peoples",
          "TopicEntityMid": "m.04nrnz",
          "InferentialChain": [
            "people.ethnicity.includes_groups"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03nvq",
              "EntityName": "Hazaras"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09743",
              "EntityName": "Pashtun"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09f5v",
              "EntityName": "Tajiks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bymc",
              "EntityName": "Parsi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c29q8",
              "EntityName": "Irani"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9bz",
              "EntityName": "Baloch people"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-945",
      "RawQuestion": "what timezone is illinois on?",
      "ProcessedQuestion": "what timezone is illinois on",
      "Parses": [
        {
          "ParseId": "WebQTrn-945.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v0t ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "illinois",
          "TopicEntityName": "Illinois",
          "TopicEntityMid": "m.03v0t",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1589",
      "RawQuestion": "who does david beckham play for in 2012?",
      "ProcessedQuestion": "who does david beckham play for in 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-1589.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02d9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02d9k ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k2yr",
              "EntityName": "LA Galaxy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2423",
      "RawQuestion": "what god does taoism believe in?",
      "ProcessedQuestion": "what god does taoism believe in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2423.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07gvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07gvx ns:religion.religion.deities ?x .\n}\n",
          "PotentialTopicEntityMention": "taoism",
          "TopicEntityName": "Taoism",
          "TopicEntityMid": "m.07gvx",
          "InferentialChain": [
            "religion.religion.deities"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g7jh",
              "EntityName": "He Xiangu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g7kl",
              "EntityName": "Cao Guojiu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g7ln",
              "EntityName": "Li Tieguai"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g7m0",
              "EntityName": "Lan Caihe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g7rf",
              "EntityName": "L\u00fc Dongbin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gcpc",
              "EntityName": "Han Xiangzi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gcpr",
              "EntityName": "Zhang Guolao"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gcqh",
              "EntityName": "Zhongli Quan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tbmq",
              "EntityName": "Jade Emperor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0258q8",
              "EntityName": "Queen Mother of the West"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025964",
              "EntityName": "Three Pure Ones"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rj87h",
              "EntityName": "Magu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n_d1",
              "EntityName": "Yuanshi Tianzun"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j626gb",
              "EntityName": "Cai Shen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1150",
      "RawQuestion": "what currency does brazil use?",
      "ProcessedQuestion": "what currency does brazil use",
      "Parses": [
        {
          "ParseId": "WebQTrn-1150.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.currency_used ?x .\n}\n",
          "PotentialTopicEntityMention": "brazil",
          "TopicEntityName": "Brazil",
          "TopicEntityMid": "m.015fr",
          "InferentialChain": [
            "location.country.currency_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03385m",
              "EntityName": "Brazilian real"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1095",
      "RawQuestion": "where did pixie lott go to school?",
      "ProcessedQuestion": "where did pixie lott go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1095.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05p300p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05p300p ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
          "PotentialTopicEntityMention": "pixie lott",
          "TopicEntityName": "Pixie Lott",
          "TopicEntityMid": "m.05p300p",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08tyb_",
              "EntityName": "Italia Conti Academy of Theatre Arts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2307",
      "RawQuestion": "where did richard nixon go to high school?",
      "ProcessedQuestion": "where did richard nixon go to high school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2307.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hn6 .\n}\n",
          "PotentialTopicEntityMention": "richard nixon",
          "TopicEntityName": "Richard Nixon",
          "TopicEntityMid": "m.06c97",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01y2hn6",
              "EntityName": "School",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cg131",
              "EntityName": "Fullerton Union High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftsh5",
              "EntityName": "Whittier High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-389",
      "RawQuestion": "when was blessed kateri born?",
      "ProcessedQuestion": "when was blessed kateri born",
      "Parses": [
        {
          "ParseId": "WebQTrn-389.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zql6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zql6 ns:people.person.date_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "kateri",
          "TopicEntityName": "Kateri Tekakwitha",
          "TopicEntityMid": "m.01zql6",
          "InferentialChain": [
            "people.person.date_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1656",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2234",
      "RawQuestion": "who played mickey on days of our lives?",
      "ProcessedQuestion": "who played mickey on days of our lives",
      "Parses": [
        {
          "ParseId": "WebQTrn-2234.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f778b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f778b ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
          "PotentialTopicEntityMention": "mickey",
          "TopicEntityName": "Mickey Horton",
          "TopicEntityMid": "m.0f778b",
          "InferentialChain": [
            "tv.tv_character.appeared_in_tv_program",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0345r9",
              "EntityName": "John Clarke"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.044xpb",
              "EntityName": "John Ingle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04mm_3",
              "EntityName": "Kevin Dobson"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3136",
      "RawQuestion": "what four regions make up the united kingdom?",
      "ProcessedQuestion": "what four regions make up the united kingdom",
      "Parses": [
        {
          "ParseId": "WebQTrn-3136.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n}\n",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3136.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.first_level_divisions ?x .\n}\n",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.country.first_level_divisions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2583",
      "RawQuestion": "where does portuguese originate?",
      "ProcessedQuestion": "where does portuguese originate",
      "Parses": [
        {
          "ParseId": "WebQTrn-2583.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? parent?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05zjd ns:base.rosetta.languoid.parent ?x .\n}\n",
          "PotentialTopicEntityMention": "portuguese",
          "TopicEntityName": "Portuguese Language",
          "TopicEntityMid": "m.05zjd",
          "InferentialChain": [
            "base.rosetta.languoid.parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tk9jx",
              "EntityName": "Portuguese-Galician Group"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2047",
      "RawQuestion": "where do the chicago cubs play?",
      "ProcessedQuestion": "where do the chicago cubs play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2047.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yjl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yjl ns:sports.sports_team.arena_stadium ?x .\n}\n",
          "PotentialTopicEntityMention": "chicago cubs",
          "TopicEntityName": "Chicago Cubs",
          "TopicEntityMid": "m.01yjl",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066by2",
              "EntityName": "Hohokam Stadium"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b0sh",
              "EntityName": "Wrigley Field"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h975w3",
              "EntityName": "Sloan Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2775",
      "RawQuestion": "what education does jeff corwin have?",
      "ProcessedQuestion": "what education does jeff corwin have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2775.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xsv3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xsv3 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
          "PotentialTopicEntityMention": "jeff corwin",
          "TopicEntityName": "Jeff Corwin",
          "TopicEntityMid": "m.03xsv3",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ky7c",
              "EntityName": "University of Massachusetts Amherst"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02r7zpz",
              "EntityName": "Norwell High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035p0k",
              "EntityName": "Bridgewater State University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1113",
      "RawQuestion": "where was hockey world cup 2010 held?",
      "ProcessedQuestion": "where was hockey world cup 2010 held",
      "Parses": [
        {
          "ParseId": "WebQTrn-1113.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "need 2010"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ss21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ss21 ns:time.recurring_event.instances ?x .\nFILTER(NOT EXISTS {?x ns:time.event.start_date ?sk0} || \nEXISTS {?x ns:time.event.start_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?x ns:time.event.end_date ?sk2} || \nEXISTS {?x ns:time.event.end_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "hockey world cup",
          "TopicEntityName": "Hockey World Cup",
          "TopicEntityMid": "m.03ss21",
          "InferentialChain": [
            "time.recurring_event.instances"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "time.event.start_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "time.event.end_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2439",
      "RawQuestion": "who did kevin garnett play for before celtics?",
      "ProcessedQuestion": "who did kevin garnett play for before celtics",
      "Parses": [
        {
          "ParseId": "WebQTrn-2439.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F before. Original comment: F before"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nfilter(?x != ns:m.0bwjj)\nns:m.02lm0t ns:sports.pro_athlete.teams ?z .\n?z ns:sports.sports_team_roster.team ns:m.0bwjj . #Celtics\n?z ns:sports.sports_team_roster.from ?from .\nns:m.02lm0t ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y  ns:sports.sports_team_roster.to ?to .\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1",
          "PotentialTopicEntityMention": "kevin garnett",
          "TopicEntityName": "Kevin Garnett",
          "TopicEntityMid": "m.02lm0t",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmgb",
              "EntityName": "Minnesota Timberwolves"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1972",
      "RawQuestion": "what language did the miwok indians speak?",
      "ProcessedQuestion": "what language did the miwok indians speak",
      "Parses": [
        {
          "ParseId": "WebQTrn-1972.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l_wv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l_wv ns:people.ethnicity.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "miwok indians",
          "TopicEntityName": "Miwok",
          "TopicEntityMid": "m.02l_wv",
          "InferentialChain": [
            "people.ethnicity.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h40lc",
              "EntityName": "English Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tbtz",
              "EntityName": "Utian languages"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2937",
      "RawQuestion": "where's the hudson river?",
      "ProcessedQuestion": "where 's the hudson river",
      "Parses": [
        {
          "ParseId": "WebQTrn-2937.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cvyp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cvyp ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "hudson river",
          "TopicEntityName": "Hudson River",
          "TopicEntityMid": "m.0cvyp",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059g4",
              "EntityName": "North America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2440",
      "RawQuestion": "who the voice of peter griffin?",
      "ProcessedQuestion": "who the voice of peter griffin",
      "Parses": [
        {
          "ParseId": "WebQTrn-2440.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n6jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n6jv ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
          "PotentialTopicEntityMention": "peter griffin",
          "TopicEntityName": "Peter Griffin",
          "TopicEntityMid": "m.03n6jv",
          "InferentialChain": [
            "tv.tv_character.appeared_in_tv_program",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02nsjvf",
              "EntityName": "Voice",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021yw7",
              "EntityName": "Seth MacFarlane"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-248",
      "RawQuestion": "who started pixar?",
      "ProcessedQuestion": "who started pixar",
      "Parses": [
        {
          "ParseId": "WebQTrn-248.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kk9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kk9v ns:organization.organization.founders ?x .\n}\n",
          "PotentialTopicEntityMention": "pixar",
          "TopicEntityName": "Pixar",
          "TopicEntityMid": "m.0kk9v",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017h4c",
              "EntityName": "Edwin Catmull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y3r",
              "EntityName": "Steve Jobs"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1477",
      "RawQuestion": "who does blake griffin play for in the nba?",
      "ProcessedQuestion": "who does blake griffin play for in the nba",
      "Parses": [
        {
          "ParseId": "WebQTrn-1477.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qhzxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qhzxp ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
          "PotentialTopicEntityMention": "blake griffin",
          "TopicEntityName": "Blake Griffin",
          "TopicEntityMid": "m.02qhzxp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-822",
      "RawQuestion": "what groups was hitler involved in?",
      "ProcessedQuestion": "what groups was hitler involved in",
      "Parses": [
        {
          "ParseId": "WebQTrn-822.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
          "PotentialTopicEntityMention": "hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "government.politician.party",
            "government.political_party_tenure.party"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g9h",
              "EntityName": "Nazi Party"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dl13",
              "EntityName": "German Workers' Party"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2885",
      "RawQuestion": "what are the kennedys?",
      "ProcessedQuestion": "what are the kennedys",
      "Parses": [
        {
          "ParseId": "WebQTrn-2885.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fbrl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fbrl ns:people.family.members ?x .\n}\n",
          "PotentialTopicEntityMention": "kennedys",
          "TopicEntityName": "Kennedy family",
          "TopicEntityMid": "m.0fbrl",
          "InferentialChain": [
            "people.family.members"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0150p7",
              "EntityName": "John F. Kennedy Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0194xc",
              "EntityName": "Ted Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kyns",
              "EntityName": "Rosemary Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n4xb",
              "EntityName": "David A. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qlg1",
              "EntityName": "Joseph P. Kennedy, Sr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w83z",
              "EntityName": "Maria Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01x4d5",
              "EntityName": "Rose Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01y603",
              "EntityName": "Caroline Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0202g7",
              "EntityName": "Patrick J. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020t1x",
              "EntityName": "Joseph P. Kennedy, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028qh_",
              "EntityName": "Jean Kennedy Smith"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02f95t",
              "EntityName": "Kathleen Kennedy Townsend"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02frvc",
              "EntityName": "Bobby Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02frws",
              "EntityName": "Timothy Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02frx4",
              "EntityName": "Mark Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02frxh",
              "EntityName": "Anthony Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h40b",
              "EntityName": "Edward M. Kennedy, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l5km",
              "EntityName": "Robert F. Kennedy, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l87p",
              "EntityName": "Joseph P. Kennedy II"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l88c",
              "EntityName": "Michael LeMoyne Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l8dg",
              "EntityName": "Rory Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02shr7",
              "EntityName": "Patrick Bouvier Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03tryx",
              "EntityName": "Courtney Kennedy Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ts1h",
              "EntityName": "Christopher G. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ts2x",
              "EntityName": "Max Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ts5s",
              "EntityName": "Douglas Harriman Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f1nm",
              "EntityName": "Kathleen Cavendish"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f1qs",
              "EntityName": "Patricia Kennedy Lawford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04syk4",
              "EntityName": "Christopher Lawford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06hx2",
              "EntityName": "Robert F. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07b5gj",
              "EntityName": "William Kennedy Smith"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ydlp5",
              "EntityName": "John Schlossberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ydlpp",
              "EntityName": "Tatiana Schlossberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ydlq2",
              "EntityName": "Rose Schlossberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08w6qf",
              "EntityName": "Kerry Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bt9c",
              "EntityName": "Eunice Kennedy Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d3k14",
              "EntityName": "John F. Kennedy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1328",
      "RawQuestion": "what type of currency does egypt have?",
      "ProcessedQuestion": "what type of currency does egypt have",
      "Parses": [
        {
          "ParseId": "WebQTrn-1328.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.currency_used ?x .\n}\n",
          "PotentialTopicEntityMention": "egypt",
          "TopicEntityName": "Egypt",
          "TopicEntityMid": "m.02k54",
          "InferentialChain": [
            "location.country.currency_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04phzg",
              "EntityName": "Egyptian pound"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2663",
      "RawQuestion": "who all has kim kardashian dated?",
      "ProcessedQuestion": "who all has kim kardashian dated",
      "Parses": [
        {
          "ParseId": "WebQTrn-2663.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
          "PotentialTopicEntityMention": "kim kardashian",
          "TopicEntityName": "Kim Kardashian",
          "TopicEntityMid": "m.0261x8t",
          "InferentialChain": [
            "base.popstra.celebrity.dated",
            "base.popstra.dated.participant"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d1st",
              "EntityName": "Nick Cannon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nr7rn",
              "EntityName": "Ray J"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.033t8w",
              "EntityName": "Ben Roethlisberger"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039bpc",
              "EntityName": "Nick Lachey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0521n6",
              "EntityName": "Joe Francis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cb70",
              "EntityName": "Reggie Bush"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2663.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
          "PotentialTopicEntityMention": "kim kardashian",
          "TopicEntityName": "Kim Kardashian",
          "TopicEntityMid": "m.0261x8t",
          "InferentialChain": [
            "celebrities.celebrity.sexual_relationships",
            "celebrities.romantic_relationship.celebrity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nr7rn",
              "EntityName": "Ray J"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l840",
              "EntityName": "Kanye West"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cb70",
              "EntityName": "Reggie Bush"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1126",
      "RawQuestion": "who is the speaker of the house of representatives currently?",
      "ProcessedQuestion": "who is the speaker of the house of representatives currently",
      "Parses": [
        {
          "ParseId": "WebQTrn-1126.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgqx ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.02079p .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "speaker of the house of representatives",
          "TopicEntityName": "Speaker of the United States House of Representatives",
          "TopicEntityMid": "m.0cgqx",
          "InferentialChain": [
            "government.government_office_or_title.office_holders",
            "government.government_position_held.office_holder"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02079p",
              "EntityName": "Speaker",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.basic_title",
              "ValueType": "String"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": "currently"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039rwf",
              "EntityName": "John Boehner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1210",
      "RawQuestion": "where is south carolina located?",
      "ProcessedQuestion": "where is south carolina located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1210.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:base.aareas.schema.administrative_area.administrative_parent ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:base.biblioness.bibs_location.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:base.locations.states_and_provences.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.locations.states_and_provences.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P4",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P5",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dwt_",
              "EntityName": "Southeastern United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ph5j",
              "EntityName": "South Atlantic States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_1l0v",
              "EntityName": "Contiguous United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hzc9m5",
              "EntityName": "United States, with Territories"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3187",
      "RawQuestion": "what country was dmitri mendeleev born?",
      "ProcessedQuestion": "what country was dmitri mendeleev born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3187.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F need to hop from place of birth to country that city is in."
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  ns:m.0gglj ns:people.person.place_of_birth ?y . # Dmitri Mendeleev\n  ?y ns:location.location.containedby ?x .\n  ?x ns:common.topic.notable_types ns:m.01mp . # Country\n}",
          "PotentialTopicEntityMention": "dmitri mendeleev",
          "TopicEntityName": "Dmitri Mendeleev",
          "TopicEntityMid": "m.0gglj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06bnz",
              "EntityName": "Russia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2722",
      "RawQuestion": "what did jordyn wieber win gold for?",
      "ProcessedQuestion": "what did jordyn wieber win gold for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2722.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nzn7y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nzn7y ns:olympics.olympic_athlete.medals_won ?y .\n?y ns:olympics.olympic_medal_honor.event ?x .\n?y ns:olympics.olympic_medal_honor.medal ns:m.02lpp7 .\n}\n",
          "PotentialTopicEntityMention": "jordyn wieber",
          "TopicEntityName": "Jordyn Wieber",
          "TopicEntityMid": "m.05nzn7y",
          "InferentialChain": [
            "olympics.olympic_athlete.medals_won",
            "olympics.olympic_medal_honor.event"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02lpp7",
              "EntityName": "Gold medal",
              "SourceNodeIndex": 0,
              "NodePredicate": "olympics.olympic_medal_honor.medal",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h_f7xn",
              "EntityName": "Gymnastics at the 2012 Summer Olympics \u2013 Women's artistic team all-around"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-424",
      "RawQuestion": "who plays princess padme in star wars?",
      "ProcessedQuestion": "who plays princess padme in star wars",
      "Parses": [
        {
          "ParseId": "WebQTrn-424.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0drf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0drf_ ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
          "PotentialTopicEntityMention": "padme",
          "TopicEntityName": "Padm\u00e9 Amidala",
          "TopicEntityMid": "m.0drf_",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.041fcq",
              "EntityName": "Catherine Taber"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l3p",
              "EntityName": "Natalie Portman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2717",
      "RawQuestion": "which party was lincoln?",
      "ProcessedQuestion": "which party was lincoln",
      "Parses": [
        {
          "ParseId": "WebQTrn-2717.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
          "PotentialTopicEntityMention": "lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "government.politician.party",
            "government.political_party_tenure.party"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07wbk",
              "EntityName": "Republican Party"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07wdw",
              "EntityName": "Whig Party"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9fdp",
              "EntityName": "National Union Party"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g7ly4",
              "EntityName": "Illinois Republican Party"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3647",
      "RawQuestion": "where was adolf hitler died?",
      "ProcessedQuestion": "where was adolf hitler died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3647.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:people.deceased_person.place_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "adolf hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0156q",
              "EntityName": "Berlin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2408",
      "RawQuestion": "which jane austen books are movies?",
      "ProcessedQuestion": "which jane austen books are movies",
      "Parses": [
        {
          "ParseId": "WebQTrn-2408.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Intersection. Original comment: F INTERSECTION"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t?x ns:common.topic.notable_types ns:m.0jsg2m .\n        ?x ns:film.film.story_by ns:m.040dv .\n}",
          "PotentialTopicEntityMention": "jane austen",
          "TopicEntityName": "Jane Austen",
          "TopicEntityMid": "m.040dv",
          "InferentialChain": [
            "book.author.works_written"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xryvm",
              "EntityName": "Book",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011yg9",
              "EntityName": "Sense and Sensibility"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q8r2w",
              "EntityName": "Northanger Abbey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q8r4y",
              "EntityName": "Persuasion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072zl1",
              "EntityName": "Pride & Prejudice"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tj4c",
              "EntityName": "Emma"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07v8_d",
              "EntityName": "Pride and Prejudice"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07v95y",
              "EntityName": "Pride and Prejudice: A Latter-Day Comedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08m1s2",
              "EntityName": "Becoming Jane"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09ncpg",
              "EntityName": "Northanger Abbey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09rnxj",
              "EntityName": "Persuasion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f98p_",
              "EntityName": "Jane Austen in Manhattan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fsd9t",
              "EntityName": "Mansfield Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qjzd",
              "EntityName": "Clueless"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2026",
      "RawQuestion": "what currency does the dominican republic?",
      "ProcessedQuestion": "what currency does the dominican republic",
      "Parses": [
        {
          "ParseId": "WebQTrn-2026.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
          "PotentialTopicEntityMention": "dominican republic",
          "TopicEntityName": "Dominican Republic",
          "TopicEntityMid": "m.027rn",
          "InferentialChain": [
            "location.country.currency_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lt7_",
              "EntityName": "Dominican peso"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3292",
      "RawQuestion": "what's sweden's currency?",
      "ProcessedQuestion": "what 's sweden 's currency",
      "Parses": [
        {
          "ParseId": "WebQTrn-3292.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.country.currency_used ?x .\n}\n",
          "PotentialTopicEntityMention": "sweden",
          "TopicEntityName": "Sweden",
          "TopicEntityMid": "m.0d0vqn",
          "InferentialChain": [
            "location.country.currency_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0485n",
              "EntityName": "Swedish krona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1250",
      "RawQuestion": "where is luke afb arizona?",
      "ProcessedQuestion": "where is luke afb arizona",
      "Parses": [
        {
          "ParseId": "WebQTrn-1250.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04twg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04twg5 ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
          "PotentialTopicEntityMention": "luke afb",
          "TopicEntityName": "Luke Air Force Base",
          "TopicEntityMid": "m.04twg5",
          "InferentialChain": [
            "location.location.street_address",
            "location.mailing_address.citytown"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qplq",
              "EntityName": "Glendale"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1560",
      "RawQuestion": "who was charles darwin married to?",
      "ProcessedQuestion": "who was charles darwin married to",
      "Parses": [
        {
          "ParseId": "WebQTrn-1560.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
          "PotentialTopicEntityMention": "who was charles darwin",
          "TopicEntityName": "Charles Darwin",
          "TopicEntityMid": "m.01lwx",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.spouse"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z3h4",
              "EntityName": "Emma Darwin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3460",
      "RawQuestion": "what country is beside france?",
      "ProcessedQuestion": "what country is beside france",
      "Parses": [
        {
          "ParseId": "WebQTrn-3460.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
          "PotentialTopicEntityMention": "france",
          "TopicEntityName": "France",
          "TopicEntityMid": "m.0f8l9c",
          "InferentialChain": [
            "location.location.adjoin_s",
            "location.adjoining_relationship.adjoins"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01mp",
              "EntityName": "Country",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0154j",
              "EntityName": "Belgium"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0345h",
              "EntityName": "Germany"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rjj",
              "EntityName": "Italy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04g61",
              "EntityName": "Luxembourg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04w58",
              "EntityName": "Monaco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mzp",
              "EntityName": "Switzerland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hg5",
              "EntityName": "Andorra"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-470",
      "RawQuestion": "what is jonas brothers names?",
      "ProcessedQuestion": "what is jonas brothers names",
      "Parses": [
        {
          "ParseId": "WebQTrn-470.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbm64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbm64 ns:music.musical_group.member ?y .\n?y ns:music.group_membership.member ?x .\n}\n",
          "PotentialTopicEntityMention": "jonas brothers",
          "TopicEntityName": "Jonas Brothers",
          "TopicEntityMid": "m.0cbm64",
          "InferentialChain": [
            "music.musical_group.member",
            "music.group_membership.member"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0417yh9",
              "EntityName": "Jack Lawless"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04cr6qv",
              "EntityName": "Joe Jonas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04d_mtq",
              "EntityName": "Kevin Jonas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f7c55",
              "EntityName": "Nick Jonas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2109",
      "RawQuestion": "where is the university of alabama?",
      "ProcessedQuestion": "where is the university of alabama",
      "Parses": [
        {
          "ParseId": "WebQTrn-2109.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wdl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wdl3 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "university of alabama",
          "TopicEntityName": "University of Alabama",
          "TopicEntityMid": "m.01wdl3",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gyh",
              "EntityName": "Alabama"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qc7l",
              "EntityName": "Tuscaloosa"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2109.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wdl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wdl3 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
          "PotentialTopicEntityMention": "university of alabama",
          "TopicEntityName": "University of Alabama",
          "TopicEntityMid": "m.01wdl3",
          "InferentialChain": [
            "organization.organization.headquarters",
            "location.mailing_address.citytown"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qc7l",
              "EntityName": "Tuscaloosa"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2109.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wdl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wdl3 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.state_province_region ?x .\n}\n",
          "PotentialTopicEntityMention": "university of alabama",
          "TopicEntityName": "University of Alabama",
          "TopicEntityMid": "m.01wdl3",
          "InferentialChain": [
            "organization.organization.headquarters",
            "location.mailing_address.state_province_region"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gyh",
              "EntityName": "Alabama"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-811",
      "RawQuestion": "what province is canada's capital located in?",
      "ProcessedQuestion": "what province is canada 's capital located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-811.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F need to take one more hop to containedBycountry"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  ns:m.0d060g ns:location.country.capital ?y . # Canada\n  ?y ns:location.location.containedby ?x .\n  ?x ns:common.topic.notable_types ns:m.01nm . # Canadian Province\n}",
          "PotentialTopicEntityMention": "canada",
          "TopicEntityName": "Canada",
          "TopicEntityMid": "m.0d060g",
          "InferentialChain": [
            "location.country.capital"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kr_",
              "EntityName": "Ontario"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-249",
      "RawQuestion": "who is tia and tamera mowry parents?",
      "ProcessedQuestion": "who is tia and tamera mowry parents",
      "Parses": [
        {
          "ParseId": "WebQTrn-249.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054xvs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054xvs ns:people.person.parents ?x .\n}\n",
          "PotentialTopicEntityMention": "tia",
          "TopicEntityName": "Tia Mowry",
          "TopicEntityMid": "m.054xvs",
          "InferentialChain": [
            "people.person.parents"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b_x1n8",
              "EntityName": "Darlene Mowry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gygc8m",
              "EntityName": "Tim Mowry"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1579",
      "RawQuestion": "where do you fly into for destin?",
      "ProcessedQuestion": "where do you fly into for destin",
      "Parses": [
        {
          "ParseId": "WebQTrn-1579.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rp8x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rp8x ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.mode_of_transportation ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
          "PotentialTopicEntityMention": "destin",
          "TopicEntityName": "Destin",
          "TopicEntityMid": "m.0rp8x",
          "InferentialChain": [
            "travel.travel_destination.how_to_get_here",
            "travel.transportation.mode_of_transportation"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xpjyz",
              "EntityName": "Airport",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q6d0",
              "EntityName": "Destin\u2013Fort Walton Beach Airport"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1577",
      "RawQuestion": "where did james baldwin go to school?",
      "ProcessedQuestion": "where did james baldwin go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1577.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017_pb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017_pb ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
          "PotentialTopicEntityMention": "james baldwin",
          "TopicEntityName": "James Baldwin",
          "TopicEntityMid": "m.017_pb",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06thjt",
              "EntityName": "The New School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09r4xx",
              "EntityName": "DeWitt Clinton High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1527",
      "RawQuestion": "what does duffy sing?",
      "ProcessedQuestion": "what does duffy sing",
      "Parses": [
        {
          "ParseId": "WebQTrn-1527.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h3y8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h3y8v ns:music.artist.track ?x .\n}\n",
          "PotentialTopicEntityMention": "duffy",
          "TopicEntityName": "Duffy",
          "TopicEntityMid": "m.03h3y8v",
          "InferentialChain": [
            "music.artist.track"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_61gwm",
              "EntityName": "You Are"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cq02g",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d_3jv6",
              "EntityName": "Stepping Stone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dm71jf",
              "EntityName": "Warwick Avenue"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dm9yv1",
              "EntityName": "Cariad Dwi'n Unig"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dmrn14",
              "EntityName": "Tomorrow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dn5vkf",
              "EntityName": "Big Flame"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dnsmxf",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dp6x9z",
              "EntityName": "Frame Me"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dpls1s",
              "EntityName": "Live and Let Die"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq004p",
              "EntityName": "Rain On Your Parade"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dqq94w",
              "EntityName": "Rockferry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dr4wgj",
              "EntityName": "Mercy (Gareth Wyn remix)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dt2rm0",
              "EntityName": "Distant Dreamer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dt9xnq",
              "EntityName": "Mercy (Hot 22 vocal remix)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dtmm44",
              "EntityName": "I'm Scared"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dtp4_j",
              "EntityName": "Smoke Without Fire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dw_vlf",
              "EntityName": "Save It for Your Prayers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dw2qd0",
              "EntityName": "Delayed Devotion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dw7t06",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dwqqgb",
              "EntityName": "Stepping Stone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxdqpz",
              "EntityName": "Syrup & Honey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxjjx9",
              "EntityName": "Breaking My Own Heart"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzrbsm",
              "EntityName": "Hanging On Too Long"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzt3c5",
              "EntityName": "Oh Boy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f_0w_g",
              "EntityName": "Enough Love"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f_0x03",
              "EntityName": "Stop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f_0x07",
              "EntityName": "Breaking My Own Heart"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0hhml",
              "EntityName": "Enough Love"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0qgk6",
              "EntityName": "Dim Dealltwriaeth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0s4km",
              "EntityName": "Smoke Without Fire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f13y3g",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2svtk",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2xbbj",
              "EntityName": "Serious"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2xbvj",
              "EntityName": "Rockferry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f3hfs7",
              "EntityName": "Rain on Your Parade"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f5lfzy",
              "EntityName": "Hedfan Angel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f6cxxm",
              "EntityName": "Put It in Perspective"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f6cxyc",
              "EntityName": "Loving You"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f7pmb8",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f996ym",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fhrfhf",
              "EntityName": "Rockferry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fjrccz",
              "EntityName": "Big Flame"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fk0dsx",
              "EntityName": "Tomorrow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fr71xw",
              "EntityName": "Lovestruck"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0frj7pf",
              "EntityName": "Fool for You"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fs4tvr",
              "EntityName": "Please Stay"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftb1x4",
              "EntityName": "Mercy (remix)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftg7pt",
              "EntityName": "Too Hurt to Dance"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftwvbd",
              "EntityName": "Stepping Stone (Cavemen remix)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fvbd13",
              "EntityName": "Keeping My Baby"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fw6v5p",
              "EntityName": "Well Well Well"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fwcc1w",
              "EntityName": "Stepping Stone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fxd3hr",
              "EntityName": "Girl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyz4cq",
              "EntityName": "Hard for the Heart"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyz4cz",
              "EntityName": "Endlessly"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyz4d1",
              "EntityName": "My Boy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyz4d5",
              "EntityName": "Don't Forsake Me"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyz4dc",
              "EntityName": "Breath Away"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g1fcb6",
              "EntityName": "Well Well Well (acoustic version)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g6fmd2",
              "EntityName": "Stay With Me Baby"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnnmfn",
              "EntityName": "Warwick Avenue"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnyt4r",
              "EntityName": "Well Well Well (Digital Dog radio edit)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws_sns",
              "EntityName": "Immaculate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws_v00",
              "EntityName": "Brother"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws_v7k",
              "EntityName": "Days Left"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws_y5g",
              "EntityName": "Play"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wsysy3",
              "EntityName": "Hard To Remember"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt00hx",
              "EntityName": "Wake Up"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt03_5",
              "EntityName": "Goodbye"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt08z8",
              "EntityName": "Worry-Free Life"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt0gzk",
              "EntityName": "My Destroyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt0hr2",
              "EntityName": "Impress You"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt0jht",
              "EntityName": "Masterpiece"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wt0jwp",
              "EntityName": "Step"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yt9xxh",
              "EntityName": "Mercy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ytkm8v",
              "EntityName": "Well, Well, Well"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2688",
      "RawQuestion": "what currency is used in france before euro?",
      "ProcessedQuestion": "what currency is used in france before euro",
      "Parses": [
        {
          "ParseId": "WebQTrn-2688.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_formerly_used ?x .\n}\n",
          "PotentialTopicEntityMention": "france",
          "TopicEntityName": "France",
          "TopicEntityMid": "m.0f8l9c",
          "InferentialChain": [
            "location.country.currency_formerly_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01m4tk",
              "EntityName": "Assignat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0298sr",
              "EntityName": "French franc"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-253",
      "RawQuestion": "where is the nation of greece located?",
      "ProcessedQuestion": "where is the nation of greece located",
      "Parses": [
        {
          "ParseId": "WebQTrn-253.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:base.locations.countries.continent ?x .\n}\n",
          "PotentialTopicEntityMention": "greece",
          "TopicEntityName": "Greece",
          "TopicEntityMid": "m.035qy",
          "InferentialChain": [
            "base.locations.countries.continent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j9z",
              "EntityName": "Europe"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-253.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "greece",
          "TopicEntityName": "Greece",
          "TopicEntityMid": "m.035qy",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j9z",
              "EntityName": "Europe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qkt",
              "EntityName": "Eurasia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t0y6g",
              "EntityName": "Southeast Europe"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1063",
      "RawQuestion": "who does josh hutcherson play in the hunger games?",
      "ProcessedQuestion": "who does josh hutcherson play in the hunger games",
      "Parses": [
        {
          "ParseId": "WebQTrn-1063.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0gkz15s .\n}\n",
          "PotentialTopicEntityMention": "josh hutcherson",
          "TopicEntityName": "Josh Hutchersonm",
          "TopicEntityMid": "m.08wjf4",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0gkz15s",
              "EntityName": "The Hunger Games",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c03gdc",
              "EntityName": "Peeta Mellark"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1063.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0n40qmp .\n}\n",
          "PotentialTopicEntityMention": "josh hutcherson",
          "TopicEntityName": "Josh Hutchersonm",
          "TopicEntityMid": "m.08wjf4",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0n40qmp",
              "EntityName": "The Hunger Games: Catching Fire",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c03gdc",
              "EntityName": "Peeta Mellark"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1063.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkz15s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkz15s ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.08wjf4 .\n}\n",
          "PotentialTopicEntityMention": "the hunger games",
          "TopicEntityName": "The Hunger Games",
          "TopicEntityMid": "m.0gkz15s",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.08wjf4",
              "EntityName": "Josh Hutchersonm",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c03gdc",
              "EntityName": "Peeta Mellark"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-553",
      "RawQuestion": "where did giovanni pierluigi da palestrina live?",
      "ProcessedQuestion": "where did giovanni pierluigi da palestrina live",
      "Parses": [
        {
          "ParseId": "WebQTrn-553.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bx_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bx_ ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "giovanni pierluigi da palestrina",
          "TopicEntityName": "Giovanni Pierluigi da Palestrina",
          "TopicEntityMid": "m.03bx_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w93f",
              "EntityName": "Palestrina"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3385",
      "RawQuestion": "what did susan atkins die of?",
      "ProcessedQuestion": "what did susan atkins die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-3385.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h8k7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h8k7 ns:people.deceased_person.cause_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "susan atkins",
          "TopicEntityName": "Susan Atkins",
          "TopicEntityMid": "m.02h8k7",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09969",
              "EntityName": "Brain tumor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-751",
      "RawQuestion": "what did farrah have surgery for?",
      "ProcessedQuestion": "what did farrah have surgery for",
      "Parses": [
        {
          "ParseId": "WebQTrn-751.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j851)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j851 ns:medicine.notable_person_with_medical_condition.condition ?x .\n}\n",
          "PotentialTopicEntityMention": "farrah",
          "TopicEntityName": "Farrah Fawcett",
          "TopicEntityMid": "m.01j851",
          "InferentialChain": [
            "medicine.notable_person_with_medical_condition.condition"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vxm4",
              "EntityName": "Anal cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1254",
      "RawQuestion": "where was the gallipoli campaign waged?",
      "ProcessedQuestion": "where was the gallipoli campaign waged",
      "Parses": [
        {
          "ParseId": "WebQTrn-1254.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fc7p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fc7p ns:time.event.locations ?x .\n}\n",
          "PotentialTopicEntityMention": "gallipoli",
          "TopicEntityName": "Gallipoli Campaign",
          "TopicEntityMid": "m.01fc7p",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03czv",
              "EntityName": "Gallipoli"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-980",
      "RawQuestion": "who played todd manning on one life to live?",
      "ProcessedQuestion": "who played todd manning on one life to live",
      "Parses": [
        {
          "ParseId": "WebQTrn-980.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y6dz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y6dz ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.035141 .\n}\n",
          "PotentialTopicEntityMention": "one life to live",
          "TopicEntityName": "One Life to Live",
          "TopicEntityMid": "m.01y6dz",
          "InferentialChain": [
            "tv.tv_program.regular_cast",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.035141",
              "EntityName": "Todd Manning",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03505j",
              "EntityName": "Roger Howarth"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-920",
      "RawQuestion": "what did egyptians speak?",
      "ProcessedQuestion": "what did egyptians speak",
      "Parses": [
        {
          "ParseId": "WebQTrn-920.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "egyptians",
          "TopicEntityName": "Egypt",
          "TopicEntityMid": "m.02k54",
          "InferentialChain": [
            "location.country.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012zfy",
              "EntityName": "Siwi Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rvv7",
              "EntityName": "Modern Standard Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hx2cr",
              "EntityName": "Egyptian Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hxbhg",
              "EntityName": "Sa'idi Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035t_3",
              "EntityName": "Arabic, Sudanese Spoken Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wc2kf",
              "EntityName": "Bedawi Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051bnt",
              "EntityName": "Nobiin Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c4chg",
              "EntityName": "Domari Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jzc",
              "EntityName": "Arabic Language"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-920.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025tvhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025tvhm ns:people.ethnicity.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "egyptians",
          "TopicEntityName": "Egyptians",
          "TopicEntityMid": "m.025tvhm",
          "InferentialChain": [
            "people.ethnicity.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hx2cr",
              "EntityName": "Egyptian Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hxbhg",
              "EntityName": "Sa'idi Arabic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l28s",
              "EntityName": "Languages of Egypt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cn75",
              "EntityName": "Egyptian language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0czqr",
              "EntityName": "Coptic Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1964",
      "RawQuestion": "what language does the country italy speak?",
      "ProcessedQuestion": "what language does the country italy speak",
      "Parses": [
        {
          "ParseId": "WebQTrn-1964.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "italy",
          "TopicEntityName": "Italy",
          "TopicEntityMid": "m.03rjj",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bjrlw",
              "EntityName": "Italian Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2956",
      "RawQuestion": "where is the caribbean geographically located?",
      "ProcessedQuestion": "where is the caribbean geographically located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2956.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261m ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "caribbean",
          "TopicEntityName": "Caribbean",
          "TopicEntityMid": "m.0261m",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02613",
              "EntityName": "Caribbean Sea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059g4",
              "EntityName": "North America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07c5l",
              "EntityName": "Americas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3645",
      "RawQuestion": "where was joe biden a senator?",
      "ProcessedQuestion": "where was joe biden a senator",
      "Parses": [
        {
          "ParseId": "WebQTrn-3645.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012gx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012gx2 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n?y ns:government.government_position_held.basic_title ns:m.048zv9l .\n}\n",
          "PotentialTopicEntityMention": "joe biden",
          "TopicEntityName": "Joe Biden",
          "TopicEntityMid": "m.012gx2",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.district_represented"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.048zv9l",
              "EntityName": "Senator",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.basic_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026mj",
              "EntityName": "Delaware"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2021",
      "RawQuestion": "what movies has renee zellweger been in?",
      "ProcessedQuestion": "what movies has renee zellweger been in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2021.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01c_zw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01c_zw ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "renee zellweger",
          "TopicEntityName": "Ren\u00e9e Zellweger",
          "TopicEntityMid": "m.01c_zw",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.11b6dw34dy",
              "EntityName": "Same Kind of Different as Me"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0114j189",
              "EntityName": "The Whole Truth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011ykb",
              "EntityName": "Jerry Maguire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cmp9",
              "EntityName": "Chicago"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xbxn",
              "EntityName": "Shark Tale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z7v5",
              "EntityName": "Reality Bites"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027nr4g",
              "EntityName": "Case 39"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0288083",
              "EntityName": "Leatherheads"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cbhg",
              "EntityName": "Cold Mountain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j69w",
              "EntityName": "Dazed and Confused"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qqs_k",
              "EntityName": "Monsters vs. Aliens"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_njz",
              "EntityName": "Down with Love"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.036qtd",
              "EntityName": "Nurse Betty"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cp2z2",
              "EntityName": "Deceiver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hl_76",
              "EntityName": "A Price Above Rubies"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m71s1",
              "EntityName": "Appaloosa"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03nnsy",
              "EntityName": "Empire Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040044",
              "EntityName": "My Boyfriend's Back"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04b7hj",
              "EntityName": "Me, Myself & Irene"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04c11j",
              "EntityName": "Bridget Jones: The Edge of Reason"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f46k7",
              "EntityName": "My One and Only"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jw07",
              "EntityName": "One True Thing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ycv_f",
              "EntityName": "The Low Life"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050gkf",
              "EntityName": "Cinderella Man"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.057hp_",
              "EntityName": "The Whole Wide World"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cbyms",
              "EntityName": "New In Town"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mq_gq",
              "EntityName": "My Own Love Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vxdh",
              "EntityName": "Bridget Jones's Diary"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06039f",
              "EntityName": "White Oleander"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080bbt",
              "EntityName": "Texas Chainsaw Massacre: The Next Generation"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.087m22",
              "EntityName": "Bee Movie"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09z8d1",
              "EntityName": "The Bachelor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b3_lr",
              "EntityName": "Shake, Rattle and Rock!"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b921t",
              "EntityName": "Miss Potter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bb20p",
              "EntityName": "Murder in the Heartland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cdnx1",
              "EntityName": "8 Seconds"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dy2m2",
              "EntityName": "Love and a .45"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nfvs0m",
              "EntityName": "A Taste for Killing"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-688",
      "RawQuestion": "what religion was mary todd lincoln?",
      "ProcessedQuestion": "what religion was mary todd lincoln",
      "Parses": [
        {
          "ParseId": "WebQTrn-688.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ypl0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ypl0 ns:people.person.religion ?x .\n}\n",
          "PotentialTopicEntityMention": "mary todd lincoln",
          "TopicEntityName": "Mary Todd Lincoln",
          "TopicEntityMid": "m.01ypl0",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019cr",
              "EntityName": "Baptists"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0631_",
              "EntityName": "Presbyterianism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3737",
      "RawQuestion": "where is art smith from?",
      "ProcessedQuestion": "where is art smith from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3737.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027560_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027560_ ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "art smith",
          "TopicEntityName": "Art Smith",
          "TopicEntityMid": "m.027560_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rkvq",
              "EntityName": "Jasper"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2626",
      "RawQuestion": "where did tennessee williams live?",
      "ProcessedQuestion": "where did tennessee williams live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2626.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c4y8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c4y8 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
          "PotentialTopicEntityMention": "tennessee williams",
          "TopicEntityName": "Tennessee Williams",
          "TopicEntityMid": "m.0c4y8",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tgp",
              "EntityName": "Mississippi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06wxw",
              "EntityName": "St. Louis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2tj",
              "EntityName": "New Orleans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wptj",
              "EntityName": "Clarksdale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wqzb",
              "EntityName": "Columbus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2827",
      "RawQuestion": "when did michael schumacher win his first title?",
      "ProcessedQuestion": "when did michael schumacher win his first title",
      "Parses": [
        {
          "ParseId": "WebQTrn-2827.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? title"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.053w4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.053w4 ns:base.formula1.formula_1_driver.championship_standing ?y .\n?y ns:base.formula1.formula_1_championship_standing.championsip ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
          "PotentialTopicEntityMention": "michael schumacher",
          "TopicEntityName": "Michael Schumacher",
          "TopicEntityMid": "m.053w4",
          "InferentialChain": [
            "base.formula1.formula_1_driver.championship_standing",
            "base.formula1.formula_1_championship_standing.championsip"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 1,
            "NodePredicate": "time.event.end_date",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.049hx8",
              "EntityName": "1994 Formula One season"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3104",
      "RawQuestion": "where does spencer pratt go to school?",
      "ProcessedQuestion": "where does spencer pratt go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3104.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z3d24)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z3d24 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
          "PotentialTopicEntityMention": "spencer pratt",
          "TopicEntityName": "Spencer Pratt",
          "TopicEntityMid": "m.02z3d24",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065y4w7",
              "EntityName": "University of Southern California"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-114",
      "RawQuestion": "what religion are people in russia?",
      "ProcessedQuestion": "what religion are people in russia",
      "Parses": [
        {
          "ParseId": "WebQTrn-114.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
          "PotentialTopicEntityMention": "russia",
          "TopicEntityName": "Russia",
          "TopicEntityMid": "m.06bnz",
          "InferentialChain": [
            "location.statistical_region.religions",
            "location.religion_percentage.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b06q",
              "EntityName": "Russian Orthodox Church"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0flw86",
              "EntityName": "Islam"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2433",
      "RawQuestion": "what is the main language spoken in italy?",
      "ProcessedQuestion": "what is the main language spoken in italy",
      "Parses": [
        {
          "ParseId": "WebQTrn-2433.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "italy",
          "TopicEntityName": "Italy",
          "TopicEntityMid": "m.03rjj",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bjrlw",
              "EntityName": "Italian Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3573",
      "RawQuestion": "what does chad michael murray play in?",
      "ProcessedQuestion": "what does chad michael murray play in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3573.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmn4p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmn4p ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "chad michael murray",
          "TopicEntityName": "Chad Michael Murray",
          "TopicEntityMid": "m.0bmn4p",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_gbp0r",
              "EntityName": "Cavemen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01067b9q",
              "EntityName": "Other People's Children"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011c9f76",
              "EntityName": "Texas Rising"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cxj_",
              "EntityName": "A Cinderella Story"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rhlv1",
              "EntityName": "Megiddo: The Omega Code 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060v34",
              "EntityName": "House of Wax"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y60c",
              "EntityName": "Freaky Friday"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c015zb",
              "EntityName": "The Haunting in Connecticut 2: Ghosts of Georgia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dgs3mp",
              "EntityName": "The Lone Ranger"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f9x7r",
              "EntityName": "Home of the Brave"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fpjb4z",
              "EntityName": "Christmas Cupid"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ft693q",
              "EntityName": "Murphy's Dozen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ghghlt",
              "EntityName": "The Carrier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gxw8cp",
              "EntityName": "Lies in Plain Sight"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h_cvyh",
              "EntityName": "To Write Love on Her Arms"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pcfg64",
              "EntityName": "Left Behind"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0q2lh3h",
              "EntityName": "Fruitvale Station"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vplztk",
              "EntityName": "A Madea Christmas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-378",
      "RawQuestion": "who were the major trade partners of russia?",
      "ProcessedQuestion": "who were the major trade partners of russia",
      "Parses": [
        {
          "ParseId": "WebQTrn-378.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F Union imported from and exported to"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x \nWHERE {\n\tFILTER (?x != ns:m.06bnz)\n\t{ \n\t  ns:m.06bnz ns:location.statistical_region.places_exported_to ?y .\n\t  ?y ns:location.imports_and_exports.exported_to ?x . \n\t}\n\tUNION\n\t{\n\t  ns:m.06bnz ns:location.statistical_region.places_imported_from ?y .\n\t  ?y ns:location.imports_and_exports.imported_from ?x . \n\t}\n}",
          "PotentialTopicEntityMention": "russia",
          "TopicEntityName": "Russia",
          "TopicEntityMid": "m.06bnz",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07t_x",
              "EntityName": "Uzbekistan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1290",
      "RawQuestion": "what do ethnic russians look like?",
      "ProcessedQuestion": "what do ethnic russians look like",
      "Parses": [
        {
          "ParseId": "WebQTrn-1290.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6ff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6ff ns:people.ethnicity.included_in_group ?x .\n}\n",
          "PotentialTopicEntityMention": "russians",
          "TopicEntityName": "Russian",
          "TopicEntityMid": "m.0g6ff",
          "InferentialChain": [
            "people.ethnicity.included_in_group"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043_yvy",
              "EntityName": "Europeans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c54l",
              "EntityName": "East Slavs"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1550",
      "RawQuestion": "where was nicki minaj born?",
      "ProcessedQuestion": "where was nicki minaj born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1550.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047sxrj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047sxrj ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "nicki minaj",
          "TopicEntityName": "Nicki Minaj",
          "TopicEntityMid": "m.047sxrj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gplfm",
              "EntityName": "Saint James, Trinidad and Tobago"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-995",
      "RawQuestion": "where do the fla marlins play?",
      "ProcessedQuestion": "where do the fla marlins play",
      "Parses": [
        {
          "ParseId": "WebQTrn-995.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02__x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02__x ns:sports.sports_team.arena_stadium ?x .\n}\n",
          "PotentialTopicEntityMention": "marlins",
          "TopicEntityName": "Miami Marlins",
          "TopicEntityMid": "m.02__x",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04m_xv0",
              "EntityName": "Marlins Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3643",
      "RawQuestion": "what countries and seas border ukraine?",
      "ProcessedQuestion": "what countries and seas border ukraine",
      "Parses": [
        {
          "ParseId": "WebQTrn-3643.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: want to also say \"notable type = sea\" but there was no option"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR (lang(?x) = '' OR lang(?x) = 'en'))\nns:m.07t21 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n{ {?x ns:common.topic.notable_types ns:m.01mp .} UNION {?x ns:common.topic.notable_types ns:m.01y2jks .} }\n}\n",
          "PotentialTopicEntityMention": "ukraine",
          "TopicEntityName": "Ukraine",
          "TopicEntityMid": "m.07t21",
          "InferentialChain": [
            "location.location.adjoin_s",
            "location.adjoining_relationship.adjoins"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01mp",
              "EntityName": "Country",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0163v",
              "EntityName": "Belarus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gj2",
              "EntityName": "Hungary"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04w4s",
              "EntityName": "Moldova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qhw",
              "EntityName": "Poland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06bnz",
              "EntityName": "Russia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06c1y",
              "EntityName": "Romania"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06npd",
              "EntityName": "Slovakia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-270",
      "RawQuestion": "what is james madison most famous for?",
      "ProcessedQuestion": "what is james madison most famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-270.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0424m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0424m ns:common.topic.notable_types ?x .\n}\n",
          "PotentialTopicEntityMention": "james madison",
          "TopicEntityName": "James Madison",
          "TopicEntityMid": "m.0424m",
          "InferentialChain": [
            "common.topic.notable_types"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xljv7",
              "EntityName": "US President"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3170",
      "RawQuestion": "what does obama have a degree in?",
      "ProcessedQuestion": "what does obama have a degree in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3170.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.062z7",
              "EntityName": "Political Science"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2377",
      "RawQuestion": "where is colombia the country?",
      "ProcessedQuestion": "where is colombia the country",
      "Parses": [
        {
          "ParseId": "WebQTrn-2377.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "colombia",
          "TopicEntityName": "Colombia",
          "TopicEntityMid": "m.01ls2",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06n3y",
              "EntityName": "South America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07c5l",
              "EntityName": "Americas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3667",
      "RawQuestion": "what was james madison's job?",
      "ProcessedQuestion": "what was james madison 's job",
      "Parses": [
        {
          "ParseId": "WebQTrn-3667.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0424m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0424m ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.office_position_or_title ?x .\n}\n",
          "PotentialTopicEntityMention": "james madison",
          "TopicEntityName": "James Madison",
          "TopicEntityMid": "m.0424m",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060d2",
              "EntityName": "President of the United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07y07",
              "EntityName": "United States Secretary of State"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2346",
      "RawQuestion": "what does taiwan people speak?",
      "ProcessedQuestion": "what does taiwan people speak",
      "Parses": [
        {
          "ParseId": "WebQTrn-2346.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f32 ns:location.country.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "taiwan",
          "TopicEntityName": "Taiwan",
          "TopicEntityMid": "m.06f32",
          "InferentialChain": [
            "location.country.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03115z",
              "EntityName": "Mandarin Chinese"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09q16b",
              "EntityName": "Taiwanese Mandarin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxj6",
              "EntityName": "Chinese, Hakka Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g1jw",
              "EntityName": "Taiwanese Hokkien"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-105",
      "RawQuestion": "what is the best currency to take to egypt 2013?",
      "ProcessedQuestion": "what is the best currency to take to egypt 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-105.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.currency_used ?x .\n}\n",
          "PotentialTopicEntityMention": "egypt",
          "TopicEntityName": "Egypt",
          "TopicEntityMid": "m.02k54",
          "InferentialChain": [
            "location.country.currency_used"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04phzg",
              "EntityName": "Egyptian pound"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1747",
      "RawQuestion": "what hotel should i stay in san francisco?",
      "ProcessedQuestion": "what hotel should i stay in san francisco",
      "Parses": [
        {
          "ParseId": "WebQTrn-1747.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d6lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d6lp ns:travel.travel_destination.accommodation ?x .\n}\n",
          "PotentialTopicEntityMention": "san francisco",
          "TopicEntityName": "San Francisco",
          "TopicEntityMid": "m.0d6lp",
          "InferentialChain": [
            "travel.travel_destination.accommodation"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0283jp6",
              "EntityName": "W San Francisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ywbh3",
              "EntityName": "Hostelling International, City Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c9ldc",
              "EntityName": "Palace Hotel, San Francisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f241m",
              "EntityName": "Clift"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-255",
      "RawQuestion": "what year was the new york blackout?",
      "ProcessedQuestion": "what year was the new york blackout",
      "Parses": [
        {
          "ParseId": "WebQTrn-255.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02j2gt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02j2gt ns:time.event.start_date ?x .\n}\n",
          "PotentialTopicEntityMention": "new york blackout",
          "TopicEntityName": "New York City blackout of 1977",
          "TopicEntityMid": "m.02j2gt",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1977-07-13",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-52",
      "RawQuestion": "where do the san francisco giants play home games?",
      "ProcessedQuestion": "where do the san francisco giants play home games",
      "Parses": [
        {
          "ParseId": "WebQTrn-52.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:sports.sports_team.arena_stadium ?x .\n?x ns:architecture.structure.opened ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
          "PotentialTopicEntityMention": "san francisco giants",
          "TopicEntityName": "San Francisco Giants",
          "TopicEntityMid": "m.0713r",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_gsg",
              "EntityName": "AT&T Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1672",
      "RawQuestion": "what is the state symbols of colorado?",
      "ProcessedQuestion": "what is the state symbols of colorado",
      "Parses": [
        {
          "ParseId": "WebQTrn-1672.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n4w ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n}\n",
          "PotentialTopicEntityMention": "colorado",
          "TopicEntityName": "Colorado",
          "TopicEntityMid": "m.01n4w",
          "InferentialChain": [
            "government.governmental_jurisdiction.official_symbols",
            "location.location_symbol_relationship.symbol"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01bcrt",
              "EntityName": "Stegosaurus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jkkg",
              "EntityName": "Lark bunting"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gwdl",
              "EntityName": "Painted turtle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0583c6",
              "EntityName": "Blue spruce"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.067bnc",
              "EntityName": "Yule Marble"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.069d4f",
              "EntityName": "Aquilegia caerulea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07dzvh",
              "EntityName": "Nil sine numine"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dvt08",
              "EntityName": "Greenback cutthroat trout"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1366",
      "RawQuestion": "who did kat graham play in parent trap?",
      "ProcessedQuestion": "who did kat graham play in parent trap",
      "Parses": [
        {
          "ParseId": "WebQTrn-1366.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y611)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y611 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.04n1xdl .\n}\n",
          "PotentialTopicEntityMention": "parent trap",
          "TopicEntityName": "The Parent Trap",
          "TopicEntityMid": "m.06y611",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04n1xdl",
              "EntityName": "Kat Graham",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gft0zl",
              "EntityName": "Jackie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2896",
      "RawQuestion": "what countries are included in the continent of asia?",
      "ProcessedQuestion": "what countries are included in the continent of asia",
      "Parses": [
        {
          "ParseId": "WebQTrn-2896.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j0k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j0k ns:base.locations.continents.countries_within ?x .\n}\n",
          "PotentialTopicEntityMention": "asia",
          "TopicEntityName": "Asia",
          "TopicEntityMid": "m.0j0k",
          "InferentialChain": [
            "base.locations.continents.countries_within"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0161c",
              "EntityName": "Bahrain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0162b",
              "EntityName": "Bangladesh"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0167v",
              "EntityName": "Brunei"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016zwt",
              "EntityName": "Nepal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c4pv",
              "EntityName": "Turkmenistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01crd5",
              "EntityName": "Vietnam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xbgx",
              "EntityName": "Cambodia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z215",
              "EntityName": "Saudi Arabia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z88t",
              "EntityName": "Yemen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lx0",
              "EntityName": "Timor-Leste"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03__y",
              "EntityName": "Jordan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_3d",
              "EntityName": "Japan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03h64",
              "EntityName": "Hong Kong"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rk0",
              "EntityName": "India"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ryn",
              "EntityName": "Indonesia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03shp",
              "EntityName": "Iran"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03spz",
              "EntityName": "Israel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047lj",
              "EntityName": "Kazakhstan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047yc",
              "EntityName": "Kuwait"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hhv",
              "EntityName": "Laos"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hqz",
              "EntityName": "Lebanon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04thp",
              "EntityName": "Macau"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ty8",
              "EntityName": "Maldives"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04w8f",
              "EntityName": "Mongolia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xn_",
              "EntityName": "Myanmar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05b7q",
              "EntityName": "North Korea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05l8y",
              "EntityName": "Oman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05sb1",
              "EntityName": "Pakistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05v8c",
              "EntityName": "Philippines"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0697s",
              "EntityName": "Qatar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06f32",
              "EntityName": "Taiwan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06m_5",
              "EntityName": "Sri Lanka"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06qd3",
              "EntityName": "South Korea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06t2t",
              "EntityName": "Singapore"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06vbd",
              "EntityName": "Syria"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07bxhl",
              "EntityName": "Bhutan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07dvs",
              "EntityName": "Tajikistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07f1x",
              "EntityName": "Thailand"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07t_x",
              "EntityName": "Uzbekistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09pmkv",
              "EntityName": "Malaysia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d05q4",
              "EntityName": "Iraq"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d05w3",
              "EntityName": "China"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j1z8",
              "EntityName": "United Arab Emirates"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jdd",
              "EntityName": "Afghanistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jt3tjf",
              "EntityName": "Kyrgyzstan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2879",
      "RawQuestion": "what college did steve jobs attend?",
      "ProcessedQuestion": "what college did steve jobs attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-2879.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y3r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y3r ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
          "PotentialTopicEntityMention": "steve jobs",
          "TopicEntityName": "Steve Jobs",
          "TopicEntityMid": "m.06y3r",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01y2hnl",
              "EntityName": "College/University",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06bw5",
              "EntityName": "Reed College"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-475",
      "RawQuestion": "what countries did czechoslovakia become?",
      "ProcessedQuestion": "what countries did czechoslovakia become",
      "Parses": [
        {
          "ParseId": "WebQTrn-475.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mk6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mk6 ns:base.datedlocationtest.dated_location_test.broke_up_into ?y .\n?y ns:base.datedlocationtest.dated_location_break_up.new_locations ?x .\n}\n",
          "PotentialTopicEntityMention": "czechoslovakia",
          "TopicEntityName": "Czechoslovakia",
          "TopicEntityMid": "m.01mk6",
          "InferentialChain": [
            "base.datedlocationtest.dated_location_test.broke_up_into",
            "base.datedlocationtest.dated_location_break_up.new_locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mjq",
              "EntityName": "Czech Republic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06npd",
              "EntityName": "Slovakia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1657",
      "RawQuestion": "what movies did miley cyrus play in?",
      "ProcessedQuestion": "what movies did miley cyrus play in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1657.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bdxs5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bdxs5 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "miley cyrus",
          "TopicEntityName": "Miley Cyrus",
          "TopicEntityMid": "m.0bdxs5",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010ls0tb",
              "EntityName": "Miley Cyrus: Tongue Tied"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027pfg",
              "EntityName": "Big Fish"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x3lt7",
              "EntityName": "Hannah Montana: The Movie"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ck042",
              "EntityName": "Hannah Montana and Miley Cyrus: Best of Both Worlds Concert"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.042w0v2",
              "EntityName": "Sonic the Hedgehog"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05h43ls",
              "EntityName": "Sex and the City 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064qvcw",
              "EntityName": "Wizards on Deck with Hannah Montana"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06fcqw",
              "EntityName": "Bolt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ykkx5",
              "EntityName": "The Last Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080gfc8",
              "EntityName": "Super Rhino"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bc5ny",
              "EntityName": "High School Musical 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cmddrx",
              "EntityName": "LOL"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0crsmk2",
              "EntityName": "Radio Disney Party Jams: The Concert"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cs2t3x",
              "EntityName": "The World According to Miley Cyrus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g56xqy",
              "EntityName": "So Undercover"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0swngjg",
              "EntityName": "Family Bond"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0w1x037",
              "EntityName": "Rock Mafia Presents: The Big Bang"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-855",
      "RawQuestion": "what year did tim duncan enter the nba?",
      "ProcessedQuestion": "what year did tim duncan enter the nba",
      "Parses": [
        {
          "ParseId": "WebQTrn-855.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gct2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gct2 ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02yqnh .\n}\n",
          "PotentialTopicEntityMention": "tim duncan",
          "TopicEntityName": "Tim Duncan",
          "TopicEntityMid": "m.01gct2",
          "InferentialChain": [
            "sports.sports_award_winner.awards",
            "sports.sports_award.season"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02yqnh",
              "EntityName": "NBA Rookie of the Year Award",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_award.award",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080sc7",
              "EntityName": "1997\u201398 NBA season"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1594",
      "RawQuestion": "what two countries speak italian?",
      "ProcessedQuestion": "what two countries speak italian",
      "Parses": [
        {
          "ParseId": "WebQTrn-1594.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bjrlw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bjrlw ns:language.human_language.main_country ?x .\n}\n",
          "PotentialTopicEntityMention": "italian",
          "TopicEntityName": "Italian Language",
          "TopicEntityMid": "m.02bjrlw",
          "InferentialChain": [
            "language.human_language.main_country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rjj",
              "EntityName": "Italy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06t8v",
              "EntityName": "Slovenia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1744",
      "RawQuestion": "what books did emily dickinson wrote?",
      "ProcessedQuestion": "what books did emily dickinson wrote",
      "Parses": [
        {
          "ParseId": "WebQTrn-1744.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01509d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01509d ns:book.author.works_written ?x .\n}\n",
          "PotentialTopicEntityMention": "emily dickinson",
          "TopicEntityName": "Emily Dickinson",
          "TopicEntityMid": "m.01509d",
          "InferentialChain": [
            "book.author.works_written"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043k2cw",
              "EntityName": "I taste a liquor never brewed"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04yjf53",
              "EntityName": "\\\"Hope\\\" is the thing with feathers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qf2j2",
              "EntityName": "Acts of Light: The World of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqr3k0",
              "EntityName": "The complete poems"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqr3k4",
              "EntityName": "The letters"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqr3k9",
              "EntityName": "Poems"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqr3kj",
              "EntityName": "Success"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqr3km",
              "EntityName": "Two poems"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr7_cw",
              "EntityName": "Emily Dickinson's open folios"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr808m",
              "EntityName": "The letters of Emily Dickinson 1845-1886"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr818f",
              "EntityName": "Selected poetry of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr82lv",
              "EntityName": "The selected poems of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr82xy",
              "EntityName": "Final harvest"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr83_x",
              "EntityName": "Emily Dickinson's herbarium"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr837d",
              "EntityName": "Letters of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr84sr",
              "EntityName": "The life and letters of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr86js",
              "EntityName": "Unpublished poems of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr877f",
              "EntityName": "Selected poems"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr898q",
              "EntityName": "Further poems of Emily Dickinson withheld from publication by her sister Lavinia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr89wm",
              "EntityName": "Bolts of melody"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8bhj",
              "EntityName": "14 by Emily Dickinson, with selected criticism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8cty",
              "EntityName": "Sampler"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8d46",
              "EntityName": "New poems of Emily Dickinson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8dz3",
              "EntityName": "Selected letters"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8pxd",
              "EntityName": "Letters to Dr. and Mrs. Josiah Gilbert Holland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr8sf0",
              "EntityName": "Poems, 1890-1896"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1538",
      "RawQuestion": "what team is ronaldinho on?",
      "ProcessedQuestion": "what team is ronaldinho on",
      "Parses": [
        {
          "ParseId": "WebQTrn-1538.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lfw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lfw5 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xn5n_",
              "EntityName": "Quer\u00e9taro F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3299",
      "RawQuestion": "what type of government did egypt have?",
      "ProcessedQuestion": "what type of government did egypt have",
      "Parses": [
        {
          "ParseId": "WebQTrn-3299.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.form_of_government ?x .\n}\n",
          "PotentialTopicEntityMention": "egypt",
          "TopicEntityName": "Egypt",
          "TopicEntityMid": "m.02k54",
          "InferentialChain": [
            "location.country.form_of_government"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dw03",
              "EntityName": "Semi-presidential system"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02tz3y",
              "EntityName": "Provisional government"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1248",
      "RawQuestion": "who played anakin skywalker in phantom menace?",
      "ProcessedQuestion": "who played anakin skywalker in phantom menace",
      "Parses": [
        {
          "ParseId": "WebQTrn-1248.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddt_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddt_ ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0f2y0 .\n}\n",
          "PotentialTopicEntityMention": "phantom menace",
          "TopicEntityName": "Star Wars Episode I: The Phantom Menace",
          "TopicEntityMid": "m.0ddt_",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1248.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddt_ .\n}\n",
          "PotentialTopicEntityMention": "anakin skywalker",
          "TopicEntityName": "Darth Vader",
          "TopicEntityMid": "m.0f2y0",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0ddt_",
              "EntityName": "Star Wars Episode I: The Phantom Menace",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-645",
      "RawQuestion": "what movies did luke perry play in?",
      "ProcessedQuestion": "what movies did luke perry play in",
      "Parses": [
        {
          "ParseId": "WebQTrn-645.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01g65g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01g65g ns:film.person_or_entity_appearing_in_film.films ?y .\n?y ns:film.personal_film_appearance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "luke perry",
          "TopicEntityName": "Luke Perry",
          "TopicEntityMid": "m.01g65g",
          "InferentialChain": [
            "film.person_or_entity_appearing_in_film.films",
            "film.personal_film_appearance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gyqzbv",
              "EntityName": "Battle Scars: The Bud Moore Story"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2773",
      "RawQuestion": "what was henry ford best known for?",
      "ProcessedQuestion": "what was henry ford best known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2773.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gxm ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "henry ford",
          "TopicEntityName": "Henry Ford",
          "TopicEntityMid": "m.03gxm",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025spv",
              "EntityName": "Business magnate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nc9",
              "EntityName": "Industrialist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09j9h",
              "EntityName": "Engineer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2668",
      "RawQuestion": "who is the voice of family guys meg griffin?",
      "ProcessedQuestion": "who is the voice of family guys meg griffin",
      "Parses": [
        {
          "ParseId": "WebQTrn-2668.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.019nnl .\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.from ?sk0} || \nEXISTS {?y ns:tv.regular_tv_appearance.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.to ?sk2} || \nEXISTS {?y ns:tv.regular_tv_appearance.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "meg griffin",
          "TopicEntityName": "Meg Griffin",
          "TopicEntityMid": "m.035szd",
          "InferentialChain": [
            "tv.tv_character.appeared_in_tv_program",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.019nnl",
              "EntityName": "Family Guy",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.series",
              "ValueType": "String"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023v4_",
              "EntityName": "Mila Kunis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2782",
      "RawQuestion": "what position does mitt romney hold?",
      "ProcessedQuestion": "what position does mitt romney hold",
      "Parses": [
        {
          "ParseId": "WebQTrn-2782.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.office_position_or_title ?x .\n}\n",
          "PotentialTopicEntityMention": "mitt romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lk31",
              "EntityName": "Governor of Massachusetts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3025",
      "RawQuestion": "who is the governor of indiana 2012?",
      "ProcessedQuestion": "who is the governor of indiana 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-3025.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_xd8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_xd8 ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "governor of indiana",
          "TopicEntityName": "Governor of Indiana",
          "TopicEntityMid": "m.04f_xd8",
          "InferentialChain": [
            "government.government_office_or_title.office_holders",
            "government.government_position_held.office_holder"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.048v04",
              "EntityName": "Mitch Daniels"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-962",
      "RawQuestion": "who played forrest gump as a kid?",
      "ProcessedQuestion": "who played forrest gump as a kid",
      "Parses": [
        {
          "ParseId": "WebQTrn-962.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bdjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bdjd ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0264f7h .\n?y ns:film.performance.character_note ?sk0 .\nFILTER (str(?sk0) = \"Young Forrest\")\n}\n",
          "PotentialTopicEntityMention": "forrest gump",
          "TopicEntityName": "Forrest Gump",
          "TopicEntityMid": "m.0bdjd",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0264f7h",
              "EntityName": "Forrest Gump",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            },
            {
              "Operator": "Equal",
              "ArgumentType": "Value",
              "Argument": "Young Forrest",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character_note",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ptwkr",
              "EntityName": "Michael Connor Humphreys"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-962.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0264f7h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0264f7h ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character_note ?sk0 .\nFILTER (str(?sk0) = \"Young Forrest\")\n}\n",
          "PotentialTopicEntityMention": "forrest gump",
          "TopicEntityName": "Forrest Gump",
          "TopicEntityMid": "m.0264f7h",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Value",
              "Argument": "Young Forrest",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character_note",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ptwkr",
              "EntityName": "Michael Connor Humphreys"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1378",
      "RawQuestion": "who does malcom floyd play for?",
      "ProcessedQuestion": "who does malcom floyd play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1378.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x2764)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x2764 ns:american_football.football_player.games ?y .\n?y ns:american_football.player_game_statistics.team ?x .\n}\n",
          "PotentialTopicEntityMention": "malcom floyd",
          "TopicEntityName": "Malcom Floyd",
          "TopicEntityMid": "m.02x2764",
          "InferentialChain": [
            "american_football.football_player.games",
            "american_football.player_game_statistics.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rpd",
              "EntityName": "San Diego Chargers"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1378.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x2764)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x2764 ns:american_football.football_player.receiving ?y .\n?y ns:american_football.player_receiving_statistics.team ?x .\n}\n",
          "PotentialTopicEntityMention": "malcom floyd",
          "TopicEntityName": "Malcom Floyd",
          "TopicEntityMid": "m.02x2764",
          "InferentialChain": [
            "american_football.football_player.receiving",
            "american_football.player_receiving_statistics.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rpd",
              "EntityName": "San Diego Chargers"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1378.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x2764)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x2764 ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
          "PotentialTopicEntityMention": "malcom floyd",
          "TopicEntityName": "Malcom Floyd",
          "TopicEntityMid": "m.02x2764",
          "InferentialChain": [
            "base.schemastaging.athlete_extra.salary",
            "base.schemastaging.athlete_salary.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rpd",
              "EntityName": "San Diego Chargers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-321",
      "RawQuestion": "what movies did madonna appear in?",
      "ProcessedQuestion": "what movies did madonna appear in",
      "Parses": [
        {
          "ParseId": "WebQTrn-321.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vs_v8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vs_v8 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "madonna",
          "TopicEntityName": "Madonna",
          "TopicEntityMid": "m.01vs_v8",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014kq6",
              "EntityName": "Die Another Day"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017sg6",
              "EntityName": "A Certain Sacrifice"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027jdg0",
              "EntityName": "Dangerous Game"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027yrxp",
              "EntityName": "Who's That Girl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ndy4",
              "EntityName": "A League of Their Own"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pg45",
              "EntityName": "Four Rooms"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0326d9",
              "EntityName": "Vision Quest"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.034d5_",
              "EntityName": "Blue in the Face"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035_2h",
              "EntityName": "Dick Tracy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_ccy",
              "EntityName": "Shadows and Fog"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f31_j",
              "EntityName": "Bloodhounds of Broadway"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jrlg",
              "EntityName": "Shanghai Surprise"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jrzl",
              "EntityName": "Girl 6"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05b_gq",
              "EntityName": "Swept Away"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06fht6",
              "EntityName": "Desperately Seeking Susan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07mpbj",
              "EntityName": "Arthur and the Invisibles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07vf5c",
              "EntityName": "Evita"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09y6pb",
              "EntityName": "The Next Best Thing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bb1gvg",
              "EntityName": "Star"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dtxp9",
              "EntityName": "Torrance Rises"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kv8_w",
              "EntityName": "Body of Evidence"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xndfq6",
              "EntityName": "secretprojectrevolution"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1338",
      "RawQuestion": "what musical instruments did duke ellington play?",
      "ProcessedQuestion": "what musical instruments did duke ellington play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1338.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bdlj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bdlj ns:music.group_member.instruments_played ?x .\n}\n",
          "PotentialTopicEntityMention": "duke ellington",
          "TopicEntityName": "Duke Ellington",
          "TopicEntityMid": "m.0bdlj",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ch55",
              "EntityName": "Jazz piano"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-291",
      "RawQuestion": "who owns the toronto maple leafs?",
      "ProcessedQuestion": "who owns the toronto maple leafs",
      "Parses": [
        {
          "ParseId": "WebQTrn-291.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:sports.professional_sports_team.owner_s ?x .\n}\n",
          "PotentialTopicEntityMention": "toronto maple leafs",
          "TopicEntityName": "Toronto Maple Leafs",
          "TopicEntityMid": "m.0j6tr",
          "InferentialChain": [
            "sports.professional_sports_team.owner_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06p05l",
              "EntityName": "Maple Leaf Sports & Entertainment"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1809",
      "RawQuestion": "where was the battle of shiloh?",
      "ProcessedQuestion": "where was the battle of shiloh",
      "Parses": [
        {
          "ParseId": "WebQTrn-1809.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0127mr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0127mr ns:time.event.locations ?x .\n}\n",
          "PotentialTopicEntityMention": "battle of shiloh",
          "TopicEntityName": "Battle of Shiloh",
          "TopicEntityMid": "m.0127mr",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07h34",
              "EntityName": "Tennessee"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mtch",
              "EntityName": "Hardin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2633",
      "RawQuestion": "who juan ponce de leon?",
      "ProcessedQuestion": "who juan ponce de leon",
      "Parses": [
        {
          "ParseId": "WebQTrn-2633.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0123f1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0123f1 ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "juan ponce de leon",
          "TopicEntityName": "Juan Ponce de Le\u00f3n",
          "TopicEntityMid": "m.0123f1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040vc4s",
              "EntityName": "Explorer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1240",
      "RawQuestion": "where is mallorca?",
      "ProcessedQuestion": "where is mallorca",
      "Parses": [
        {
          "ParseId": "WebQTrn-1240.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g52z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g52z ns:geography.island.body_of_water ?x .\n}\n",
          "PotentialTopicEntityMention": "mallorca",
          "TopicEntityName": "Majorca",
          "TopicEntityMid": "m.0g52z",
          "InferentialChain": [
            "geography.island.body_of_water"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04swx",
              "EntityName": "Mediterranean Sea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1070",
      "RawQuestion": "where marie curie come from?",
      "ProcessedQuestion": "where marie curie come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1070.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.053_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.053_d ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "marie curie",
          "TopicEntityName": "Marie Curie",
          "TopicEntityMid": "m.053_d",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081m_",
              "EntityName": "Warsaw"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2789",
      "RawQuestion": "what unicef stands for?",
      "ProcessedQuestion": "what unicef stands for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2789.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. However, this is a non-conventional way as the entity linking system gets the entity already.. Original comment: F cannot handle abbreviations"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.0fxc0 ns:common.topic.alias ?x .\n  FILTER (lang(?x) = 'en')\n}",
          "PotentialTopicEntityMention": "unicef",
          "TopicEntityName": "UNICEF",
          "TopicEntityMid": "m.0fxc0",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "United Nations Children's Fund",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-584",
      "RawQuestion": "where was hackney 2012 held?",
      "ProcessedQuestion": "where was hackney 2012 held",
      "Parses": [
        {
          "ParseId": "WebQTrn-584.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yx1g5l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yx1g5l ns:time.event.locations ?x .\n}\n",
          "PotentialTopicEntityMention": "hackney 2012",
          "TopicEntityName": "Radio 1\u2032s Hackney Weekend 2012",
          "TopicEntityMid": "m.0yx1g5l",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.031dy5",
              "EntityName": "Hackney Marshes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1198",
      "RawQuestion": "who is tony romo engaged to?",
      "ProcessedQuestion": "who is tony romo engaged to",
      "Parses": [
        {
          "ParseId": "WebQTrn-1198.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "Relationship type = engaged"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097yk7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097yk7 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "tony romo",
          "TopicEntityName": "Tony Romo",
          "TopicEntityMid": "m.097yk7",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.spouse"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05h3nvg",
              "EntityName": "Candice Crawford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2034",
      "RawQuestion": "what language do iraqi people speak?",
      "ProcessedQuestion": "what language do iraqi people speak",
      "Parses": [
        {
          "ParseId": "WebQTrn-2034.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05q4 ns:location.country.languages_spoken ?x .\n}\n",
          "PotentialTopicEntityMention": "iraqi",
          "TopicEntityName": "Iraq",
          "TopicEntityMid": "m.0d05q4",
          "InferentialChain": [
            "location.country.languages_spoken"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01m3f7",
              "EntityName": "Turkmen Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.032f6",
              "EntityName": "Persian Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03y86gf",
              "EntityName": "South Azeri language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04w042",
              "EntityName": "Assyrian Neo-Aramaic Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b1g2",
              "EntityName": "Kurdish languages"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g5tm",
              "EntityName": "Syriac language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jzc",
              "EntityName": "Arabic Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xrg",
              "EntityName": "Armenian Language"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2034.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05q4 ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "iraqi",
          "TopicEntityName": "Iraq",
          "TopicEntityMid": "m.0d05q4",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b1g2",
              "EntityName": "Kurdish languages"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jzc",
              "EntityName": "Arabic Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-25",
      "RawQuestion": "what movies does taylor lautner play in?",
      "ProcessedQuestion": "what movies does taylor lautner play in",
      "Parses": [
        {
          "ParseId": "WebQTrn-25.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ldhs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ldhs ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
          "PotentialTopicEntityMention": "taylor lautner",
          "TopicEntityName": "Taylor Lautner",
          "TopicEntityMid": "m.07ldhs",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011q0_7k",
              "EntityName": "Run the Tide"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012z_7zt",
              "EntityName": "The Ridiculous Six"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02686wj",
              "EntityName": "He's a Bully, Charlie Brown"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03nm_fh",
              "EntityName": "Twilight"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05pdh86",
              "EntityName": "The Twilight Saga: New Moon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06_wqk4",
              "EntityName": "Valentine's Day"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066b_n",
              "EntityName": "Cheaper by the Dozen 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06crgb",
              "EntityName": "The Adventures of Sharkboy and Lavagirl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06zs80t",
              "EntityName": "Shadow Fury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.075wx7_",
              "EntityName": "Eclipse"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.075wx89",
              "EntityName": "The Twilight Saga: Breaking Dawn - Part 1"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07cdy_t",
              "EntityName": "The Nick and Jessica Variety Hour"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bdwfqj",
              "EntityName": "Northern Lights"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cmdl80",
              "EntityName": "Abduction"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0djz0rc",
              "EntityName": "The Twilight Saga: Breaking Dawn - Part 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g_w5hs",
              "EntityName": "Field of Dreams 2: Lockout"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gx8qcw",
              "EntityName": "Incarceron"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mzt5cs",
              "EntityName": "Grown Ups 2"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ngj__s",
              "EntityName": "Tracers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2905",
      "RawQuestion": "what bella name her baby?",
      "ProcessedQuestion": "what bella name her baby",
      "Parses": [
        {
          "ParseId": "WebQTrn-2905.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027b7y9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027b7y9 ns:fictional_universe.fictional_character.children ?x .\n}\n",
          "PotentialTopicEntityMention": "bella",
          "TopicEntityName": "Bella Swan",
          "TopicEntityMid": "m.027b7y9",
          "InferentialChain": [
            "fictional_universe.fictional_character.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gk8n0",
              "EntityName": "Renesmee Carlie Cullen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1886",
      "RawQuestion": "where did carrie underwood live?",
      "ProcessedQuestion": "where did carrie underwood live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1886.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058s57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058s57 ns:music.artist.origin ?x .\n}\n",
          "PotentialTopicEntityMention": "carrie underwood",
          "TopicEntityName": "Carrie Underwood",
          "TopicEntityMid": "m.058s57",
          "InferentialChain": [
            "music.artist.origin"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z7zm",
              "EntityName": "Checotah"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1886.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058s57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058s57 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
          "PotentialTopicEntityMention": "carrie underwood",
          "TopicEntityName": "Carrie Underwood",
          "TopicEntityMid": "m.058s57",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z7zm",
              "EntityName": "Checotah"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2393",
      "RawQuestion": "who started google?",
      "ProcessedQuestion": "who started google",
      "Parses": [
        {
          "ParseId": "WebQTrn-2393.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0387r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0387r ns:law.invention.inventor ?x .\n}\n",
          "PotentialTopicEntityMention": "google",
          "TopicEntityName": "Google Search",
          "TopicEntityMid": "m.0387r",
          "InferentialChain": [
            "law.invention.inventor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gjpq",
              "EntityName": "Larry Page"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gjq6",
              "EntityName": "Sergey Brin"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2393.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.founders ?x .\n}\n",
          "PotentialTopicEntityMention": "google",
          "TopicEntityName": "Google",
          "TopicEntityMid": "m.045c7b",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gjpq",
              "EntityName": "Larry Page"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gjq6",
              "EntityName": "Sergey Brin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-254",
      "RawQuestion": "what three countries does mexico border?",
      "ProcessedQuestion": "what three countries does mexico border",
      "Parses": [
        {
          "ParseId": "WebQTrn-254.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
          "PotentialTopicEntityMention": "mexico",
          "TopicEntityName": "Mexico",
          "TopicEntityMid": "m.0b90_r",
          "InferentialChain": [
            "location.location.adjoin_s",
            "location.adjoining_relationship.adjoins"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01mp",
              "EntityName": "Country",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0164b",
              "EntityName": "Belize"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0345_",
              "EntityName": "Guatemala"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1785",
      "RawQuestion": "who plays effy in skins uk?",
      "ProcessedQuestion": "who plays effy in skins uk",
      "Parses": [
        {
          "ParseId": "WebQTrn-1785.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0279tyz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0279tyz ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.02q1mwf .\n}\n",
          "PotentialTopicEntityMention": "skins",
          "TopicEntityName": "Skins",
          "TopicEntityMid": "m.0279tyz",
          "InferentialChain": [
            "tv.tv_program.regular_cast",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02q1mwf",
              "EntityName": "Effy Stonem",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pvrd0",
              "EntityName": "Kaya Scodelario"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3693",
      "RawQuestion": "who is the chicago bulls head coach?",
      "ProcessedQuestion": "who is the chicago bulls head coach",
      "Parses": [
        {
          "ParseId": "WebQTrn-3693.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jm74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jm74 ns:basketball.basketball_team.head_coach ?x .\n}\n",
          "PotentialTopicEntityMention": "chicago bulls",
          "TopicEntityName": "Chicago Bulls",
          "TopicEntityMid": "m.0jm74",
          "InferentialChain": [
            "basketball.basketball_team.head_coach"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043jv80",
              "EntityName": "Tom Thibodeau"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-259",
      "RawQuestion": "what shows did kellie martin star in?",
      "ProcessedQuestion": "what shows did kellie martin star in",
      "Parses": [
        {
          "ParseId": "WebQTrn-259.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03kcyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03kcyd ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
          "PotentialTopicEntityMention": "kellie martin",
          "TopicEntityName": "Kellie Martin",
          "TopicEntityMid": "m.03kcyd",
          "InferentialChain": [
            "tv.tv_actor.starring_roles",
            "tv.regular_tv_appearance.series"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0180mw",
              "EntityName": "ER"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025v6tf",
              "EntityName": "Father Murphy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026h12p",
              "EntityName": "ABC Weekend Special"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027z1w1",
              "EntityName": "Mystery Woman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02s17g",
              "EntityName": "Mr. Belvedere"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03q1mg",
              "EntityName": "The Tracey Ullman Show"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03v_dq",
              "EntityName": "Life Goes On"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03vn46",
              "EntityName": "Taz-Mania"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wrwt",
              "EntityName": "Life with Lucy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05nlzq",
              "EntityName": "A Pup Named Scooby-Doo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07cf_d1",
              "EntityName": "Crisis Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08znxc",
              "EntityName": "Christy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d7bm_",
              "EntityName": "Potato Head Kids"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2863",
      "RawQuestion": "what type of government does the bahamas have?",
      "ProcessedQuestion": "what type of government does the bahamas have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2863.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.form_of_government ?x .\n}\n",
          "PotentialTopicEntityMention": "bahamas",
          "TopicEntityName": "Bahamas",
          "TopicEntityMid": "m.0160w",
          "InferentialChain": [
            "location.country.form_of_government"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018wl5",
              "EntityName": "Parliamentary system"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fpfn",
              "EntityName": "Unitary state"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q20",
              "EntityName": "Constitutional monarchy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1871",
      "RawQuestion": "what language do chinese?",
      "ProcessedQuestion": "what language do chinese",
      "Parses": [
        {
          "ParseId": "WebQTrn-1871.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "chinese",
          "TopicEntityName": "China",
          "TopicEntityMid": "m.0d05w3",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0653m",
              "EntityName": "Standard Chinese"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2173",
      "RawQuestion": "where is mark sanchez now?",
      "ProcessedQuestion": "where is mark sanchez now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2173.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctxdn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctxdn ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "mark sanchez",
          "TopicEntityName": "Mark Sanchez",
          "TopicEntityMid": "m.0ctxdn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-100",
      "RawQuestion": "when will oscar pistorius compete?",
      "ProcessedQuestion": "when will oscar pistorius compete",
      "Parses": [
        {
          "ParseId": "WebQTrn-100.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1lfn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1lfn ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.sport ?x .\n}\n",
          "PotentialTopicEntityMention": "oscar pistorius",
          "TopicEntityName": "Oscar Pistorius",
          "TopicEntityMid": "m.0f1lfn",
          "InferentialChain": [
            "sports.pro_athlete.sports_played_professionally",
            "sports.pro_sports_played.sport"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bynt",
              "EntityName": "Track and field athletics"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1679",
      "RawQuestion": "where is washington d.c. at?",
      "ProcessedQuestion": "where is washington d.c. at",
      "Parses": [
        {
          "ParseId": "WebQTrn-1679.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rh6k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rh6k ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
          "PotentialTopicEntityMention": "washington d . c",
          "TopicEntityName": "Washington, D.C.",
          "TopicEntityMid": "m.0rh6k",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01nt",
              "EntityName": "Region",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018v5k",
              "EntityName": "Mid-Atlantic states"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ph5j",
              "EntityName": "South Atlantic States"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2536",
      "RawQuestion": "what did ron howard direct?",
      "ProcessedQuestion": "what did ron howard direct",
      "Parses": [
        {
          "ParseId": "WebQTrn-2536.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g2lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g2lq ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n?x ns:film.film.directed_by ns:m.0g2lq .\n}\n",
          "PotentialTopicEntityMention": "ron howard",
          "TopicEntityName": "Ron Howard",
          "TopicEntityMid": "m.0g2lq",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.film"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0g2lq",
              "EntityName": "Ron Howard",
              "SourceNodeIndex": 1,
              "NodePredicate": "film.film.directed_by",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02mh4b",
              "EntityName": "Night Shift"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yf34",
              "EntityName": "Grand Theft Auto"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m6kg",
              "EntityName": "A Beautiful Mind"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0crrc8",
              "EntityName": "Dr. Seuss' How the Grinch Stole Christmas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2051",
      "RawQuestion": "what was irving langmuir famous for?",
      "ProcessedQuestion": "what was irving langmuir famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2051.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03yzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03yzb ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "irving langmuir",
          "TopicEntityName": "Irving Langmuir",
          "TopicEntityMid": "m.03yzb",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3416",
      "RawQuestion": "who is daniel in the bible?",
      "ProcessedQuestion": "who is daniel in the bible",
      "Parses": [
        {
          "ParseId": "WebQTrn-3416.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cts ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "daniel",
          "TopicEntityName": "Daniel",
          "TopicEntityMid": "m.02cts",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066dv",
              "EntityName": "Prophet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-705",
      "RawQuestion": "who runs the cornelia marie now?",
      "ProcessedQuestion": "who runs the cornelia marie now",
      "Parses": [
        {
          "ParseId": "WebQTrn-705.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qn24x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qn24x ns:boats.ship.owners ?y .\n?y ns:boats.ship_ownership.owner ?x .\n}\n",
          "PotentialTopicEntityMention": "cornelia marie",
          "TopicEntityName": "FV Cornelia Marie",
          "TopicEntityMid": "m.02qn24x",
          "InferentialChain": [
            "boats.ship.owners",
            "boats.ship_ownership.owner"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j2sdt9",
              "EntityName": "Jake Harris"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j2sdtm",
              "EntityName": "F/V Cornelia Marie, LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j2sdty",
              "EntityName": "Josh Harris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3005",
      "RawQuestion": "what challenges did helen keller have to face?",
      "ProcessedQuestion": "what challenges did helen keller have to face",
      "Parses": [
        {
          "ParseId": "WebQTrn-3005.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ppx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ppx ns:base.qualia.disabled_person.disability ?y .\n?y ns:base.qualia.disability.type_of_disability ?x .\n}\n",
          "PotentialTopicEntityMention": "helen keller",
          "TopicEntityName": "Helen Keller",
          "TopicEntityMid": "m.03ppx",
          "InferentialChain": [
            "base.qualia.disabled_person.disability",
            "base.qualia.disability.type_of_disability"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014wq_",
              "EntityName": "Hearing loss"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04t973",
              "EntityName": "Vision loss"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3210",
      "RawQuestion": "what country christopher columbus from?",
      "ProcessedQuestion": "what country christopher columbus from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3210.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pwz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pwz ns:people.person.nationality ?x .\n}\n",
          "PotentialTopicEntityMention": "christopher columbus",
          "TopicEntityName": "Christopher Columbus",
          "TopicEntityMid": "m.01pwz",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q14r",
              "EntityName": "Republic of Genoa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2378",
      "RawQuestion": "who does jodelle ferland play in eclipse?",
      "ProcessedQuestion": "who does jodelle ferland play in eclipse",
      "Parses": [
        {
          "ParseId": "WebQTrn-2378.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jv8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jv8w ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.075wx7_ .\n}\n",
          "PotentialTopicEntityMention": "jodelle ferland",
          "TopicEntityName": "Jodelle Ferland",
          "TopicEntityMid": "m.09jv8w",
          "InferentialChain": [
            "film.actor.film",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.075wx7_",
              "EntityName": "Eclipse",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0774b8j",
              "EntityName": "Bree Tanner"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2378.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075wx7_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075wx7_ ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.09jv8w .\n}\n",
          "PotentialTopicEntityMention": "eclipse",
          "TopicEntityName": "Eclipse",
          "TopicEntityMid": "m.075wx7_",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.09jv8w",
              "EntityName": "Jodelle Ferland",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0774b8j",
              "EntityName": "Bree Tanner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2544",
      "RawQuestion": "what are fun things to do in seattle wa?",
      "ProcessedQuestion": "what are fun things to do in seattle wa",
      "Parses": [
        {
          "ParseId": "WebQTrn-2544.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d9jr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d9jr ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
          "PotentialTopicEntityMention": "seattle wa",
          "TopicEntityName": "Seattle",
          "TopicEntityMid": "m.0d9jr",
          "InferentialChain": [
            "travel.travel_destination.tourist_attractions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k7v7",
              "EntityName": "Space Needle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01r0v3",
              "EntityName": "Smith Tower"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dxmq",
              "EntityName": "Woodland Park Zoo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k953",
              "EntityName": "Pike Place Market"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kl80",
              "EntityName": "Museum of Flight"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ks_p",
              "EntityName": "Pacific Science Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rp3lq",
              "EntityName": "Georgetown Steam Plant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xg6w",
              "EntityName": "Seattle Aquarium"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03325p",
              "EntityName": "Seattle Asian Art Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0332cl",
              "EntityName": "Frye Art Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0332j6",
              "EntityName": "Seattle Art Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035pqt",
              "EntityName": "Henry Art Gallery"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03t00j",
              "EntityName": "Nordic Heritage Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04n53vb",
              "EntityName": "Tillicum Village"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k2k2n2",
              "EntityName": "Seattle Great Wheel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0prqs",
              "EntityName": "Seattle International Film Festival"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pxmn",
              "EntityName": "Experience Music Project Museum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y657tp",
              "EntityName": "Garden of Remembrance"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-410",
      "RawQuestion": "where does drew gordon play?",
      "ProcessedQuestion": "where does drew gordon play",
      "Parses": [
        {
          "ParseId": "WebQTrn-410.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? none not available"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gyrdqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gyrdqn ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
          "PotentialTopicEntityMention": "drew gordon",
          "TopicEntityName": "Drew Gordon",
          "TopicEntityMid": "m.0gyrdqn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0769_r",
              "EntityName": "New Mexico Lobos Basketball"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2059",
      "RawQuestion": "what year magic johnson retired?",
      "ProcessedQuestion": "what year magic johnson retired",
      "Parses": [
        {
          "ParseId": "WebQTrn-2059.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.095nx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.095nx ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.career_end ?x .\n}\n",
          "PotentialTopicEntityMention": "magic johnson",
          "TopicEntityName": "Magic Johnson",
          "TopicEntityMid": "m.095nx",
          "InferentialChain": [
            "sports.pro_athlete.sports_played_professionally",
            "sports.pro_sports_played.career_end"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1996",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1548",
      "RawQuestion": "what is the name of the pittsburgh steelers stadium?",
      "ProcessedQuestion": "what is the name of the pittsburgh steelers stadium",
      "Parses": [
        {
          "ParseId": "WebQTrn-1548.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tfm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tfm ns:sports.sports_team.venue ?y .\n?y ns:sports.team_venue_relationship.venue ?x .\nFILTER(NOT EXISTS {?y ns:sports.team_venue_relationship.from ?sk0} || \nEXISTS {?y ns:sports.team_venue_relationship.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.team_venue_relationship.to ?sk2} || \nEXISTS {?y ns:sports.team_venue_relationship.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "pittsburgh steelers",
          "TopicEntityName": "Pittsburgh Steelers",
          "TopicEntityMid": "m.05tfm",
          "InferentialChain": [
            "sports.sports_team.venue",
            "sports.team_venue_relationship.venue"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.team_venue_relationship.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.team_venue_relationship.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y4pw",
              "EntityName": "Heinz Field"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-347",
      "RawQuestion": "what exactly did dale earnhardt die from?",
      "ProcessedQuestion": "what exactly did dale earnhardt die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-347.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026fx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026fx ns:people.deceased_person.cause_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "dale earnhardt",
          "TopicEntityName": "Dale Earnhardt",
          "TopicEntityMid": "m.026fx",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06c7cpj",
              "EntityName": "Racing Accident"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qd_p",
              "EntityName": "Basilar skull fracture"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3200",
      "RawQuestion": "who is the 2011 heisman trophy winner?",
      "ProcessedQuestion": "who is the 2011 heisman trophy winner",
      "Parses": [
        {
          "ParseId": "WebQTrn-3200.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01q9mk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01q9mk ns:award.award_category.winners ?y .\n?y ns:award.award_honor.award_winner ?x .\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk0} || \nEXISTS {?y ns:award.award_honor.year ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk2} || \nEXISTS {?y ns:award.award_honor.year ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "heisman trophy",
          "TopicEntityName": "Heisman Trophy",
          "TopicEntityMid": "m.01q9mk",
          "InferentialChain": [
            "award.award_category.winners",
            "award.award_honor.award_winner"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051wcwn",
              "EntityName": "Robert Griffin III"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3575",
      "RawQuestion": "what are some important events in ancient egypt?",
      "ProcessedQuestion": "what are some important events in ancient egypt",
      "Parses": [
        {
          "ParseId": "WebQTrn-3575.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kg9 ns:location.location.events ?x .\n}\n",
          "PotentialTopicEntityMention": "ancient egypt",
          "TopicEntityName": "Ancient Egypt",
          "TopicEntityMid": "m.0kg9",
          "InferentialChain": [
            "location.location.events"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qq1q",
              "EntityName": "First Intermediate Period of Egypt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wc29",
              "EntityName": "Greco-Persian Wars"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sl7g",
              "EntityName": "New Kingdom of Egypt"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-618",
      "RawQuestion": "what college did lil wayne graduated from?",
      "ProcessedQuestion": "what college did lil wayne graduated from",
      "Parses": [
        {
          "ParseId": "WebQTrn-618.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016kjs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016kjs ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.02h4rq6 .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
          "PotentialTopicEntityMention": "lil wayne",
          "TopicEntityName": "Lil Wayne",
          "TopicEntityMid": "m.016kjs",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02h4rq6",
              "EntityName": "Bachelor of Science",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            },
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01y2hnl",
              "EntityName": "College/University",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gnrt",
              "EntityName": "University of Phoenix"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2703",
      "RawQuestion": "what did thoreau die from?",
      "ProcessedQuestion": "what did thoreau die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2703.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwx3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwx3 ns:people.deceased_person.cause_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "thoreau",
          "TopicEntityName": "Henry David Thoreau",
          "TopicEntityMid": "m.0bwx3",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1652",
      "RawQuestion": "who did etta james marry?",
      "ProcessedQuestion": "who did etta james marry",
      "Parses": [
        {
          "ParseId": "WebQTrn-1652.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015xp4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015xp4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
          "PotentialTopicEntityMention": "etta james",
          "TopicEntityName": "Etta James",
          "TopicEntityMid": "m.015xp4",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.spouse"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h41924",
              "EntityName": "Artis Mills"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1050",
      "RawQuestion": "where is san miguel mexico on map?",
      "ProcessedQuestion": "where is san miguel mexico on map",
      "Parses": [
        {
          "ParseId": "WebQTrn-1050.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? on map?"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056201)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056201 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.02_3pws .\n}\n",
          "PotentialTopicEntityMention": "san miguel mexico",
          "TopicEntityName": "San Miguel de Allende",
          "TopicEntityMid": "m.056201",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02_3pws",
              "EntityName": "Mexican state",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0259ws",
              "EntityName": "Guanajuato"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3435",
      "RawQuestion": "what form of government does north korea?",
      "ProcessedQuestion": "what form of government does north korea",
      "Parses": [
        {
          "ParseId": "WebQTrn-3435.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b7q ns:location.country.form_of_government ?x .\n}\n",
          "PotentialTopicEntityMention": "north korea",
          "TopicEntityName": "North Korea",
          "TopicEntityMid": "m.05b7q",
          "InferentialChain": [
            "location.country.form_of_government"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gt0n",
              "EntityName": "Juche"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025tbxf",
              "EntityName": "Socialist state"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0py4y",
              "EntityName": "Single-party state"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2801",
      "RawQuestion": "who is ellen bernstein?",
      "ProcessedQuestion": "who is ellen bernstein",
      "Parses": [
        {
          "ParseId": "WebQTrn-2801.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019f2f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019f2f ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "ellen bernstein",
          "TopicEntityName": "Ellen Burstyn",
          "TopicEntityMid": "m.019f2f",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0377kt",
              "EntityName": "Minister"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2666",
      "RawQuestion": "what book did john steinbeck wrote about the people in the dust bowl?",
      "ProcessedQuestion": "what book did john steinbeck wrote about the people in the dust bowl",
      "Parses": [
        {
          "ParseId": "WebQTrn-2666.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04107)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04107 ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n?x ns:book.written_work.subjects ns:m.0g89m .\n}\n",
          "PotentialTopicEntityMention": "john steinbeck",
          "TopicEntityName": "John Steinbeck",
          "TopicEntityMid": "m.04107",
          "InferentialChain": [
            "book.author.works_written"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xryvm",
              "EntityName": "Book",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            },
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0g89m",
              "EntityName": "Dust Bowl",
              "SourceNodeIndex": 0,
              "NodePredicate": "book.written_work.subjects",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bq9g",
              "EntityName": "The Grapes of Wrath"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3527",
      "RawQuestion": "what language did ancient romans write in?",
      "ProcessedQuestion": "what language did ancient romans write in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3527.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cmp ns:fictional_universe.fictional_setting.languages ?x .\n}\n",
          "PotentialTopicEntityMention": "romans",
          "TopicEntityName": "Roman Empire",
          "TopicEntityMid": "m.06cmp",
          "InferentialChain": [
            "fictional_universe.fictional_setting.languages"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0349s",
              "EntityName": "Greek Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04h9h",
              "EntityName": "Latin Language"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-752",
      "RawQuestion": "who was the leader of the soviet union in 1945?",
      "ProcessedQuestion": "who was the leader of the soviet union in 1945",
      "Parses": [
        {
          "ParseId": "WebQTrn-752.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? leader, 1945"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkx3 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"1945-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"1945-01-01\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "soviet union",
          "TopicEntityName": "Soviet Union",
          "TopicEntityMid": "m.05vz3zq",
          "InferentialChain": [
            "government.governmental_jurisdiction.governing_officials",
            "government.government_position_held.office_holder"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0fkx3",
              "EntityName": "Premier",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.basic_title",
              "ValueType": "String"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "1945-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "1945-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "1945-01-01",
            "End": "1945-12-31",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": "1945"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_lf",
              "EntityName": "Joseph Stalin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-985",
      "RawQuestion": "what did writers of the harlem renaissance write about?",
      "ProcessedQuestion": "what did writers of the harlem renaissance write about",
      "Parses": [
        {
          "ParseId": "WebQTrn-985.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? not sure if this is the intent of the question"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019y_2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019y_2 ns:book.book_subject.works ?x .\n?x ns:common.topic.notable_types ns:m.03jz7ls .\n}\n",
          "PotentialTopicEntityMention": "harlem renaissance",
          "TopicEntityName": "Harlem Renaissance",
          "TopicEntityMid": "m.019y_2",
          "InferentialChain": [
            "book.book_subject.works"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03jz7ls",
              "EntityName": "Written Work",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h2x8v6",
              "EntityName": "Looking at the World through Michael Jackson's Left Eye (Part 2)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hnx0cj",
              "EntityName": "Countdown of 10 Amazing Moments from the Year 2011: No. 6 Sonny Rollins"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-694",
      "RawQuestion": "where did morgan freeman come from?",
      "ProcessedQuestion": "where did morgan freeman come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-694.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.055c8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.055c8 ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "morgan freeman",
          "TopicEntityName": "Morgan Freeman",
          "TopicEntityMid": "m.055c8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-312",
      "RawQuestion": "what language do they speak in northern ireland?",
      "ProcessedQuestion": "what language do they speak in northern ireland",
      "Parses": [
        {
          "ParseId": "WebQTrn-312.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bcl ns:location.country.official_language ?x .\n}\n",
          "PotentialTopicEntityMention": "northern ireland",
          "TopicEntityName": "Northern Ireland",
          "TopicEntityMid": "m.05bcl",
          "InferentialChain": [
            "location.country.official_language"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0165vf",
              "EntityName": "Ulster Scots dialects"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h40lc",
              "EntityName": "English Language"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03x42",
              "EntityName": "Irish"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2761",
      "RawQuestion": "what did fred davis do?",
      "ProcessedQuestion": "what did fred davis do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2761.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rhm_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rhm_l ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "fred davis",
          "TopicEntityName": "Fred Davis",
          "TopicEntityMid": "m.02rhm_l",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-685",
      "RawQuestion": "who was king or queen after victoria?",
      "ProcessedQuestion": "who was king or queen after victoria",
      "Parses": [
        {
          "ParseId": "WebQTrn-685.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cw10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cw10 ns:people.person.children ?x .\n?x ns:common.topic.notable_types ns:m.04fnrhx .\n}\n",
          "PotentialTopicEntityMention": "victoria",
          "TopicEntityName": "Queen Victoria",
          "TopicEntityMid": "m.0cw10",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04fnrhx",
              "EntityName": "Monarch",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cm03",
              "EntityName": "Edward VII"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2015",
      "RawQuestion": "what did ronnie radke do?",
      "ProcessedQuestion": "what did ronnie radke do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2015.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ql6bk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ql6bk ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "ronnie radke",
          "TopicEntityName": "Ronnie Radke",
          "TopicEntityMid": "m.02ql6bk",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016z4k",
              "EntityName": "Singer-songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hpcdn2",
              "EntityName": "Rapper"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3617",
      "RawQuestion": "where does missouri river end?",
      "ProcessedQuestion": "where does missouri river end",
      "Parses": [
        {
          "ParseId": "WebQTrn-3617.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ykz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ykz ns:geography.river.mouth ?x .\n}\n",
          "PotentialTopicEntityMention": "missouri river",
          "TopicEntityName": "Missouri River",
          "TopicEntityMid": "m.04ykz",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04yf_",
              "EntityName": "Mississippi River"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3428",
      "RawQuestion": "where did heidi klum and seal get married?",
      "ProcessedQuestion": "where did heidi klum and seal get married",
      "Parses": [
        {
          "ParseId": "WebQTrn-3428.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pctb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pctb ns:people.person.spouse_s ?y .\n?y ns:people.marriage.location_of_ceremony ?x .\n?y ns:people.marriage.spouse ns:m.01vsykc .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
          "PotentialTopicEntityMention": "heidi klum",
          "TopicEntityName": "Heidi Klum",
          "TopicEntityMid": "m.01pctb",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.location_of_ceremony"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01vsykc",
              "EntityName": "Seal",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.spouse",
              "ValueType": "String"
            },
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b90_r",
              "EntityName": "Mexico"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3211",
      "RawQuestion": "who was michael j fox?",
      "ProcessedQuestion": "who was michael j fox",
      "Parses": [
        {
          "ParseId": "WebQTrn-3211.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "michael j fox",
          "TopicEntityName": "Michael J. Fox",
          "TopicEntityMid": "m.0hz_1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1585",
      "RawQuestion": "what did newton discover or invent?",
      "ProcessedQuestion": "what did newton discover or invent",
      "Parses": [
        {
          "ParseId": "WebQTrn-1585.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F UNION need union of original ideas and inventions"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\t  ns:m.03s9v ns:base.argumentmaps.innovator.original_ideas ?x .\n\t}\n\tUNION\n\t{\n\t  ns:m.03s9v ns:law.inventor.inventions ?x .\n\t}\n}",
          "PotentialTopicEntityMention": "newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kffn",
              "EntityName": "Newton's law of universal gravitation"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nhc9",
              "EntityName": "Reflecting telescope"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.079vqm",
              "EntityName": "Pet door"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2514",
      "RawQuestion": "what time is kansas in?",
      "ProcessedQuestion": "what time is kansas in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2514.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0488g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0488g ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "kansas",
          "TopicEntityName": "Kansas",
          "TopicEntityMid": "m.0488g",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1259",
      "RawQuestion": "where did brad paisley graduate from college?",
      "ProcessedQuestion": "where did brad paisley graduate from college",
      "Parses": [
        {
          "ParseId": "WebQTrn-1259.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gr7w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gr7w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n?y ns:education.education.degree ns:m.019v9k .\n}\n",
          "PotentialTopicEntityMention": "brad paisley",
          "TopicEntityName": "Brad Paisley",
          "TopicEntityMid": "m.03gr7w",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01y2hnl",
              "EntityName": "College/University",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            },
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.019v9k",
              "EntityName": "Bachelor's degree",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qdhx",
              "EntityName": "Belmont University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2111",
      "RawQuestion": "who tom cruise been married to?",
      "ProcessedQuestion": "who tom cruise been married to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2111.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07r1h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07r1h ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
          "PotentialTopicEntityMention": "tom cruise",
          "TopicEntityName": "Tom Cruise",
          "TopicEntityMid": "m.07r1h",
          "InferentialChain": [
            "people.person.spouse_s",
            "people.marriage.spouse"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04ztj",
              "EntityName": "Marriage",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.marriage.type_of_union",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020trj",
              "EntityName": "Mimi Rogers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05dbf",
              "EntityName": "Nicole Kidman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbf1f",
              "EntityName": "Katie Holmes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3727",
      "RawQuestion": "what is the biggest country in europe by population?",
      "ProcessedQuestion": "what is the biggest country in europe by population",
      "Parses": [
        {
          "ParseId": "WebQTrn-3727.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "???"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02j9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02j9z ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n?x ns:topic_server.population_number ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
          "PotentialTopicEntityMention": "europe",
          "TopicEntityName": "Europe",
          "TopicEntityMid": "m.02j9z",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01mp",
              "EntityName": "Country",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "topic_server.population_number",
            "ValueType": "Number"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0345h",
              "EntityName": "Germany"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1929",
      "RawQuestion": "what year did yankees win their first world series?",
      "ProcessedQuestion": "what year did yankees win their first world series",
      "Parses": [
        {
          "ParseId": "WebQTrn-1929.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cqt41)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cqt41 ns:sports.sports_team.championships ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
          "PotentialTopicEntityMention": "yankees",
          "TopicEntityName": "New York Yankees",
          "TopicEntityMid": "m.0cqt41",
          "InferentialChain": [
            "sports.sports_team.championships"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "time.event.end_date",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tfv7",
              "EntityName": "1923 World Series"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1242",
      "RawQuestion": "what years have the cubs been in the world series?",
      "ProcessedQuestion": "what years have the cubs been in the world series",
      "Parses": [
        {
          "ParseId": "WebQTrn-1242.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yjl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yjl ns:sports.sports_team.championships ?x .\n}\n",
          "PotentialTopicEntityMention": "cubs",
          "TopicEntityName": "Chicago Cubs",
          "TopicEntityMid": "m.01yjl",
          "InferentialChain": [
            "sports.sports_team.championships"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tg8s",
              "EntityName": "1908 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tg9h",
              "EntityName": "1907 World Series"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-143",
      "RawQuestion": "what did nick clegg study at university?",
      "ProcessedQuestion": "what did nick clegg study at university",
      "Parses": [
        {
          "ParseId": "WebQTrn-143.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036547)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036547 ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
          "PotentialTopicEntityMention": "nick clegg",
          "TopicEntityName": "Nick Clegg",
          "TopicEntityMid": "m.036547",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r79",
              "EntityName": "Political philosophy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.074n0",
              "EntityName": "Social anthropology"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-552",
      "RawQuestion": "when was bill clinton elected president?",
      "ProcessedQuestion": "when was bill clinton elected president",
      "Parses": [
        {
          "ParseId": "WebQTrn-552.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: "
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?dt\nWHERE {\n  ?e ns:government.election.winner  ns:m.0157m ; # Bill Clinton\n     ns:government.election.office  ns:m.060d2 ; # President of the United States\n     ns:government.election.election_year ?dt  .\n}",
          "PotentialTopicEntityMention": "bill clinton",
          "TopicEntityName": "Bill Clinton",
          "TopicEntityMid": "m.0157m",
          "InferentialChain": [
            "government.politician.election_campaigns"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1992",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1992-11-03",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1996",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1996-11-05",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1391",
      "RawQuestion": "when did the battle of thermopylae occur?",
      "ProcessedQuestion": "when did the battle of thermopylae occur",
      "Parses": [
        {
          "ParseId": "WebQTrn-1391.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014px1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014px1 ns:time.event.start_date ?x .\n}\n",
          "PotentialTopicEntityMention": "battle of thermopylae",
          "TopicEntityName": "Battle of Thermopylae",
          "TopicEntityMid": "m.014px1",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "-479",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3312",
      "RawQuestion": "which legend of zelda game is the first?",
      "ProcessedQuestion": "which legend of zelda game is the first",
      "Parses": [
        {
          "ParseId": "WebQTrn-3312.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07d5v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07d5v ns:cvg.game_series.games_in_series ?x .\n?x ns:cvg.computer_videogame.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
          "PotentialTopicEntityMention": "legend of zelda",
          "TopicEntityName": "The Legend of Zelda",
          "TopicEntityMid": "m.07d5v",
          "InferentialChain": [
            "cvg.game_series.games_in_series"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "cvg.computer_videogame.release_date",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01633s",
              "EntityName": "The Legend of Zelda"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2706",
      "RawQuestion": "what years did the red sox win the world series?",
      "ProcessedQuestion": "what years did the red sox win the world series",
      "Parses": [
        {
          "ParseId": "WebQTrn-2706.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d5z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d5z ns:sports.sports_team.championships ?x .\n}\n",
          "PotentialTopicEntityMention": "red sox",
          "TopicEntityName": "Boston Red Sox",
          "TopicEntityMid": "m.01d5z",
          "InferentialChain": [
            "sports.sports_team.championships"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018n8",
              "EntityName": "1903 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0268bkj",
              "EntityName": "2007 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.044ym6",
              "EntityName": "2004 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0469hv",
              "EntityName": "1918 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tf98",
              "EntityName": "1912 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tg7d",
              "EntityName": "1916 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tg7r",
              "EntityName": "1915 World Series"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ds324c",
              "EntityName": "2013 World Series"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3521",
      "RawQuestion": "where the seneca indians lived?",
      "ProcessedQuestion": "where the seneca indians lived",
      "Parses": [
        {
          "ParseId": "WebQTrn-3521.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028yj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028yj0 ns:people.ethnicity.geographic_distribution ?x .\n}\n",
          "PotentialTopicEntityMention": "seneca indians",
          "TopicEntityName": "Seneca people",
          "TopicEntityMid": "m.028yj0",
          "InferentialChain": [
            "people.ethnicity.geographic_distribution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059rby",
              "EntityName": "New York"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kr_",
              "EntityName": "Ontario"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3525",
      "RawQuestion": "where did mendeleev died?",
      "ProcessedQuestion": "where did mendeleev died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3525.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gglj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gglj ns:people.deceased_person.place_of_death ?x .\n}\n",
          "PotentialTopicEntityMention": "mendeleev",
          "TopicEntityName": "Dmitri Mendeleev",
          "TopicEntityMid": "m.0gglj",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06pr6",
              "EntityName": "Saint Petersburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-873",
      "RawQuestion": "what airport is in kauai hawaii?",
      "ProcessedQuestion": "what airport is in kauai hawaii",
      "Parses": [
        {
          "ParseId": "WebQTrn-873.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaiian Islands",
          "TopicEntityMid": "m.014wxc",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xpjyz",
              "EntityName": "Airport",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_rq2",
              "EntityName": "Lihue Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n5fw",
              "EntityName": "Honolulu International Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01r3l2",
              "EntityName": "Kahului Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k5j7",
              "EntityName": "Kona International Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398q8",
              "EntityName": "Dillingham Airfield"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398qm",
              "EntityName": "Hana Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398qz",
              "EntityName": "Kalaupapa Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398r_",
              "EntityName": "Molokai Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398r9",
              "EntityName": "Kapalua Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398rn",
              "EntityName": "Lanai Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398sb",
              "EntityName": "Hilo International Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0398sq",
              "EntityName": "Waimea-Kohala Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039g2f",
              "EntityName": "Kalaeloa Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039ggn",
              "EntityName": "Port Allen Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039ghr",
              "EntityName": "Upolu Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cybt3",
              "EntityName": "Marine Corps Air Station Kaneohe Bay"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gddb",
              "EntityName": "Pacific Missile Range Facility"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kd9xk",
              "EntityName": "French Frigate Shoals Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08jyt_",
              "EntityName": "Princeville Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09gkgdn",
              "EntityName": "Kaanapali Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hhhg6t",
              "EntityName": "Waikoloa Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0s059",
              "EntityName": "Wheeler Army Airfield"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-873.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbsn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbsn ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
          "PotentialTopicEntityMention": "kauai",
          "TopicEntityName": "Kauai",
          "TopicEntityMid": "m.0jbsn",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xpjyz",
              "EntityName": "Airport",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_rq2",
              "EntityName": "Lihue Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gddb",
              "EntityName": "Pacific Missile Range Facility"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-873.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lmg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lmg4 ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
          "PotentialTopicEntityMention": "kauai",
          "TopicEntityName": "Kauai County",
          "TopicEntityMid": "m.0lmg4",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01xpjyz",
              "EntityName": "Airport",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_rq2",
              "EntityName": "Lihue Airport"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08jyt_",
              "EntityName": "Princeville Airport"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1452",
      "RawQuestion": "where does the spanish language come from?",
      "ProcessedQuestion": "where does the spanish language come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1452.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06nm1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06nm1 ns:base.rosetta.languoid.parent ?x .\n}\n",
          "PotentialTopicEntityMention": "spanish language",
          "TopicEntityName": "Spanish Language",
          "TopicEntityMid": "m.06nm1",
          "InferentialChain": [
            "base.rosetta.languoid.parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tjmkj",
              "EntityName": "Castilian Group"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1839",
      "RawQuestion": "who ran against bill clinton for president?",
      "ProcessedQuestion": "who ran against bill clinton for president",
      "Parses": [
        {
          "ParseId": "WebQTrn-1839.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Longer Chain/complicated filtering. Original comment: F Need US Presidential Election of 1992 and 1996 (the years he was president) and then get participants"
          },
          "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.07wcy ns:time.recurring_event.instances ?y .\n\t?y ns:government.election.campaigns ?c .\n\t?c ns:government.election_campaign.candidate ns:m.0157m .\n\t?y ns:government.election.campaigns ?z .\n\t?z ns:government.election_campaign.candidate ?x .\n\tFILTER (?x != ns:m.0157m)\n}",
          "PotentialTopicEntityMention": "bill clinton",
          "TopicEntityName": "Bill Clinton",
          "TopicEntityMid": "m.0157m",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.034ls",
              "EntityName": "George H. W. Bush"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fhkx",
              "EntityName": "Bob Dole"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1519",
      "RawQuestion": "who is the falcons quarterback 2012?",
      "ProcessedQuestion": "who is the falcons quarterback 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-1519.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wsr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wsr ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n?y ns:sports.sports_team_roster.position ns:m.06b1q .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
          "PotentialTopicEntityMention": "falcons",
          "TopicEntityName": "Atlanta Falcons",
          "TopicEntityMid": "m.0wsr",
          "InferentialChain": [
            "sports.sports_team.roster",
            "sports.sports_team_roster.player"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.06b1q",
              "EntityName": "Quarterback",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.position",
              "ValueType": "String"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026p_fw",
              "EntityName": "John Parker Wilson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0271d3w",
              "EntityName": "Matt Ryan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_0cj8",
              "EntityName": "Dominique Davis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040gr_",
              "EntityName": "Joey Harrington"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05rsxm",
              "EntityName": "Chris Redman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vls2",
              "EntityName": "Luke McCown"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2081",
      "RawQuestion": "where does danish language come from?",
      "ProcessedQuestion": "where does danish language come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2081.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0295r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0295r ns:language.human_language.language_family ?x .\n}\n",
          "PotentialTopicEntityMention": "danish",
          "TopicEntityName": "Danish Language",
          "TopicEntityMid": "m.0295r",
          "InferentialChain": [
            "language.human_language.language_family"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0140kd",
              "EntityName": "North Germanic languages"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03489",
              "EntityName": "Germanic languages"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03v09",
              "EntityName": "Indo-European languages"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2613",
      "RawQuestion": "who played bob ewell in to kill a mockingbird?",
      "ProcessedQuestion": "who played bob ewell in to kill a mockingbird",
      "Parses": [
        {
          "ParseId": "WebQTrn-2613.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ccck7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ccck7 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0r9yvpc .\n}\n",
          "PotentialTopicEntityMention": "to kill a mockingbird",
          "TopicEntityName": "To Kill a Mockingbird",
          "TopicEntityMid": "m.0ccck7",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0r9yvpc",
              "EntityName": "Robert Ewell",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wcq6q",
              "EntityName": "James Anderson"
            }
          ]
        }
      ]
    }
  ]
}